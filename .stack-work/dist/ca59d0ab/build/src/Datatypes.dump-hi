
==================== FINAL INTERFACE ====================
2017-11-06 01:30:19.9978041 UTC

interface Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W:Datatypes [family instance module] 8002
  interface hash: 85309c1ebc493cc1b8762b945f478ad4
  ABI hash: b251feff5146ed04ed84c69fe46996b9
  export-list hash: bebaf71ee017f77ebbbe906025b7bb68
  orphan hash: 711196844af9750f9d8ac33bfc2745e2
  flag hash: e69cd5cdb5e45b157f94e6f5a3d032f4
  sig of: Nothing
  used TH splices: False
  where
exports:
  Datatypes.Day{Datatypes.Day day end start}
  Datatypes.DayOfWeek{Datatypes.Fr Datatypes.Mo Datatypes.Th Datatypes.Tu Datatypes.We}
  Datatypes.Everything{Datatypes.Everything courses}
  Datatypes.FullCourse{Datatypes.FullCourse courseNum courseTitle sections}
  Datatypes.Section{Datatypes.Section instructor schedules sectionNum}
module dependencies:
package dependencies: Win32-2.3.1.1@Win32-2.3.1.1
                      aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-m1TEyTenyr5nJN40TpHVj
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson 2c2ea416ea3f3f7ead4fbc7d22c60646
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson.Types.FromJSON c2c6218f8e81ad49905d0b1cdb32252e
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson.Types.ToJSON f36660aaef3410ced418ccb283e21448
import  -/  base-4.9.1.0:Data.Functor 682cc832c233b71cec70179490a08631
import  -/  base-4.9.1.0:Data.OldList c9282ee91951bdcbd918d2960562c007
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Enum 3beb5abd88e2173130728ffba8194381
import  -/  base-4.9.1.0:GHC.Err 20faef8829fd13c027d0ee2213637534
import  -/  base-4.9.1.0:GHC.Generics 87e8d511f978e043d53db008cc403901
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek :: GHC.Enum.Enum Datatypes.DayOfWeek
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.DayOfWeek
                  Datatypes.$fEnumDayOfWeek_$csucc
                  Datatypes.$fEnumDayOfWeek_$cpred
                  Datatypes.$fEnumDayOfWeek_$ctoEnum
                  Datatypes.$fEnumDayOfWeek_$cfromEnum
                  Datatypes.$fEnumDayOfWeek_$cenumFrom
                  Datatypes.$fEnumDayOfWeek_$cenumFromThen
                  Datatypes.$fEnumDayOfWeek_$cenumFromTo
                  Datatypes.$fEnumDayOfWeek_$cenumFromThenTo -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek1 :: [Datatypes.DayOfWeek]
  {- Unfolding: (Datatypes.$fEnumDayOfWeek_go5 4#) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek2 :: [Datatypes.DayOfWeek]
  {- Unfolding: (Datatypes.$fEnumDayOfWeek_go6 3#) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek3 :: [Datatypes.DayOfWeek]
  {- Unfolding: (Datatypes.$fEnumDayOfWeek_go7 2#) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek4 :: [Datatypes.DayOfWeek]
  {- Unfolding: (Datatypes.$fEnumDayOfWeek_go8 1#) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek5 :: [Datatypes.DayOfWeek]
  {- Unfolding: (Datatypes.$fEnumDayOfWeek_go9 0#) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek6 :: GHC.Prim.Int# -> Datatypes.DayOfWeek
  {- Arity: 1, Strictness: <L,U>x -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek7 :: Datatypes.DayOfWeek
  {- Strictness: x -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek8 :: Datatypes.DayOfWeek
  {- Strictness: x -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_$cenumFrom ::
    Datatypes.DayOfWeek -> [Datatypes.DayOfWeek]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: Datatypes.DayOfWeek) ->
                 case a of wild {
                   Datatypes.Mo -> Datatypes.$fEnumDayOfWeek5
                   Datatypes.Tu -> Datatypes.$fEnumDayOfWeek4
                   Datatypes.We -> Datatypes.$fEnumDayOfWeek3
                   Datatypes.Th -> Datatypes.$fEnumDayOfWeek2
                   Datatypes.Fr -> Datatypes.$fEnumDayOfWeek1 }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_$cenumFromThen ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> [Datatypes.DayOfWeek]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Datatypes.DayOfWeek)
                   (b :: Datatypes.DayOfWeek) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Datatypes.DayOfWeek]
                                    Datatypes.$fEnumDayOfWeek_c
                                    (GHC.Types.[] @ Datatypes.DayOfWeek)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Datatypes.DayOfWeek]
                                    Datatypes.$fEnumDayOfWeek_c
                                    (GHC.Types.[] @ Datatypes.DayOfWeek)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 4# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       Datatypes.Mo -> $j1 0#
                       Datatypes.Tu -> $j1 1#
                       Datatypes.We -> $j1 2#
                       Datatypes.Th -> $j1 3#
                       Datatypes.Fr -> $j1 4# }
                 } in
                 case a of wild {
                   Datatypes.Mo -> $j 0#
                   Datatypes.Tu -> $j 1#
                   Datatypes.We -> $j 2#
                   Datatypes.Th -> $j 3#
                   Datatypes.Fr -> $j 4# }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_$cenumFromThenTo ::
    Datatypes.DayOfWeek
    -> Datatypes.DayOfWeek
    -> Datatypes.DayOfWeek
    -> [Datatypes.DayOfWeek]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_$cenumFromTo ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> [Datatypes.DayOfWeek]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Datatypes.DayOfWeek)
                   (y :: Datatypes.DayOfWeek) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Datatypes.Mo
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> Datatypes.$fEnumDayOfWeek_go4 x1
                            GHC.Types.True -> GHC.Types.[] @ Datatypes.DayOfWeek }
                       Datatypes.Tu
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> Datatypes.$fEnumDayOfWeek_go3 x1
                            GHC.Types.True -> GHC.Types.[] @ Datatypes.DayOfWeek }
                       Datatypes.We
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2#) of wild1 {
                            GHC.Types.False -> Datatypes.$fEnumDayOfWeek_go2 x1
                            GHC.Types.True -> GHC.Types.[] @ Datatypes.DayOfWeek }
                       Datatypes.Th
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 3#) of wild1 {
                            GHC.Types.False -> Datatypes.$fEnumDayOfWeek_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ Datatypes.DayOfWeek }
                       Datatypes.Fr
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 4#) of wild1 {
                            GHC.Types.False -> Datatypes.$fEnumDayOfWeek_go x1
                            GHC.Types.True -> GHC.Types.[] @ Datatypes.DayOfWeek } }
                 } in
                 case x of wild {
                   Datatypes.Mo -> $j 0#
                   Datatypes.Tu -> $j 1#
                   Datatypes.We -> $j 2#
                   Datatypes.Th -> $j 3#
                   Datatypes.Fr -> $j 4# }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_$cfromEnum :: Datatypes.DayOfWeek -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datatypes.DayOfWeek) ->
                 case w of wild {
                   Datatypes.Mo -> GHC.Types.I# 0#
                   Datatypes.Tu -> GHC.Types.I# 1#
                   Datatypes.We -> GHC.Types.I# 2#
                   Datatypes.Th -> GHC.Types.I# 3#
                   Datatypes.Fr -> GHC.Types.I# 4# }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_$cpred ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Datatypes.DayOfWeek) ->
                 case a of wild {
                   Datatypes.Mo -> Datatypes.$fEnumDayOfWeek7
                   Datatypes.Tu -> Datatypes.Mo
                   Datatypes.We -> Datatypes.Tu
                   Datatypes.Th -> Datatypes.We
                   Datatypes.Fr -> Datatypes.Th }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_$csucc ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Datatypes.DayOfWeek) ->
                 case a of wild {
                   Datatypes.Mo -> Datatypes.Tu
                   Datatypes.Tu -> Datatypes.We
                   Datatypes.We -> Datatypes.Th
                   Datatypes.Th -> Datatypes.Fr
                   Datatypes.Fr -> Datatypes.$fEnumDayOfWeek8 }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_$ctoEnum :: GHC.Types.Int -> Datatypes.DayOfWeek
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Datatypes.$w$ctoEnum ww1 }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_c ::
    GHC.Types.Int -> [Datatypes.DayOfWeek] -> [Datatypes.DayOfWeek]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [Datatypes.DayOfWeek]) ->
                 GHC.Types.:
                   @ Datatypes.DayOfWeek
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ Datatypes.DayOfWeek a })
                   ys) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, Strictness: <L,U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go1 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, Strictness: <L,U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go2 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, Strictness: <L,U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go3 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, Strictness: <L,U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go4 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, Strictness: <L,U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go5 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go6 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go7 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go8 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEnumDayOfWeek_go9 :: GHC.Prim.Int# -> [Datatypes.DayOfWeek]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
ad58660113478d00359ba2ff2cfc4dc2
  $fEqDay :: GHC.Classes.Eq Datatypes.Day
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Day Datatypes.$fEqDay_$c== Datatypes.$fEqDay_$c/= -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEqDayOfWeek :: GHC.Classes.Eq Datatypes.DayOfWeek
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.DayOfWeek
                  Datatypes.$fEqDayOfWeek_$c==
                  Datatypes.$fEqDayOfWeek_$c/= -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEqDayOfWeek_$c/= ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Datatypes.DayOfWeek)
                   (b :: Datatypes.DayOfWeek) ->
                 case a of wild {
                   Datatypes.Mo
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Datatypes.Mo -> GHC.Types.False }
                   Datatypes.Tu
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Datatypes.Tu -> GHC.Types.False }
                   Datatypes.We
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Datatypes.We -> GHC.Types.False }
                   Datatypes.Th
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Datatypes.Th -> GHC.Types.False }
                   Datatypes.Fr
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Datatypes.Fr -> GHC.Types.False } }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fEqDayOfWeek_$c== ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Datatypes.DayOfWeek)
                   (ds1 :: Datatypes.DayOfWeek) ->
                 case ds of wild {
                   Datatypes.Mo
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Datatypes.Mo -> GHC.Types.True }
                   Datatypes.Tu
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Datatypes.Tu -> GHC.Types.True }
                   Datatypes.We
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Datatypes.We -> GHC.Types.True }
                   Datatypes.Th
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Datatypes.Th -> GHC.Types.True }
                   Datatypes.Fr
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Datatypes.Fr -> GHC.Types.True } }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fEqDay_$c/= :: Datatypes.Day -> Datatypes.Day -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U(U))><S(SLL),1*U(1*U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Datatypes.Day) (b :: Datatypes.Day) ->
                 case Datatypes.$fEqDay_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fEqDay_$c== :: Datatypes.Day -> Datatypes.Day -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U(U))><S(SLL),1*U(1*U,1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datatypes.Day) (w1 :: Datatypes.Day) ->
                 case w of ww { Datatypes.Day ww1 ww2 ww3 ->
                 case w1 of ww4 { Datatypes.Day ww5 ww6 ww7 ->
                 Datatypes.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
877615fc906ccaad066e29ffd79dc9be
  $fEqEverything :: GHC.Classes.Eq Datatypes.Everything
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Everything
                  Datatypes.$fEqEverything_$c==
                  Datatypes.$fEqEverything_$c/= -}
29c26d2ba4afe9d0154563405bff395f
  $fEqEverything1 ::
    [Datatypes.FullCourse] -> [Datatypes.FullCourse] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (GHC.Classes.$fEq[]_$c==
                   @ Datatypes.FullCourse
                   Datatypes.$fEqFullCourse) -}
877615fc906ccaad066e29ffd79dc9be
  $fEqEverything_$c/= ::
    Datatypes.Everything -> Datatypes.Everything -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fEqEverything_$s$fEq[]_$c/=
                  `cast`
                (Sym (Datatypes.N:Everything[0])
                 ->_R Sym (Datatypes.N:Everything[0])
                 ->_R <GHC.Types.Bool>_R) -}
877615fc906ccaad066e29ffd79dc9be
  $fEqEverything_$c== ::
    Datatypes.Everything -> Datatypes.Everything -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fEqEverything1
                  `cast`
                (Sym (Datatypes.N:Everything[0])
                 ->_R Sym (Datatypes.N:Everything[0])
                 ->_R <GHC.Types.Bool>_R) -}
184ee4afafebc6a0465f283f747e3a02
  $fEqEverything_$s$fEq[]_$c/= ::
    [Datatypes.FullCourse] -> [Datatypes.FullCourse] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [Datatypes.FullCourse]) (y :: [Datatypes.FullCourse]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ Datatypes.FullCourse
                      Datatypes.$fEqFullCourse
                      x
                      y)) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fEqFullCourse :: GHC.Classes.Eq Datatypes.FullCourse
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.FullCourse
                  Datatypes.$fEqFullCourse_$c==
                  Datatypes.$fEqFullCourse_$c/= -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fEqFullCourse_$c/= ::
    Datatypes.FullCourse -> Datatypes.FullCourse -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Datatypes.FullCourse) (b :: Datatypes.FullCourse) ->
                 case Datatypes.$fEqFullCourse_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fEqFullCourse_$c== ::
    Datatypes.FullCourse -> Datatypes.FullCourse -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datatypes.FullCourse) (w1 :: Datatypes.FullCourse) ->
                 case w of ww { Datatypes.FullCourse ww1 ww2 ww3 ->
                 case w1 of ww4 { Datatypes.FullCourse ww5 ww6 ww7 ->
                 Datatypes.$w$c==1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fEqSection :: GHC.Classes.Eq Datatypes.Section
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Section
                  Datatypes.$fEqSection_$c==
                  Datatypes.$fEqSection_$c/= -}
ad58660113478d00359ba2ff2cfc4dc2
  $fEqSection_$c/= ::
    Datatypes.Section -> Datatypes.Section -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Datatypes.Section) (b :: Datatypes.Section) ->
                 case Datatypes.$fEqSection_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fEqSection_$c== ::
    Datatypes.Section -> Datatypes.Section -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datatypes.Section) (w1 :: Datatypes.Section) ->
                 case w of ww { Datatypes.Section ww1 ww2 ww3 ->
                 case w1 of ww4 { Datatypes.Section ww5 ww6 ww7 ->
                 Datatypes.$w$c==2 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONDay :: Data.Aeson.Types.FromJSON.FromJSON Datatypes.Day
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Day
                  Datatypes.$fFromJSONDay_$cparseJSON
                  Datatypes.$fFromJSONDay_$cparseJSONList -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONDay1 ::
    [Data.Aeson.Types.Internal.Parser Datatypes.Day]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Datatypes.Day] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
b2300273c74abb36069827c808cce4bc
  $fFromJSONDay10 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "start")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "start")
                   @ "start"
                   @~ <'GHC.Base.Just "start">_N
                   Datatypes.$fFromJSONDay11
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"start">_N)) -}
dbea07379dee58f6e88bd057b965d87d
  $fFromJSONDay11 :: GHC.Generics.R:SingSymbols "start"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "start"
                   Datatypes.$fFromJSONDay12
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"start">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"start">_N))) -}
a2d6648f260d5f8365db61807fbdfff3
  $fFromJSONDay12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "start"#) -}
3d793218aa1ccd995c80f05feb2d7e3d
  $fFromJSONDay13 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ Datatypes.DayOfWeek
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Datatypes.$fFromJSONDayOfWeek
                   @ a1
                   w3) -}
932efef36514a802e7da4884f13fbeb7
  $fFromJSONDay14 :: GHC.Generics.SingI ('GHC.Base.Just "day")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONDay15
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "day">_N) -}
12d4e5e3b787dca8fc9a51b57e064596
  $fFromJSONDay15 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "day")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "day")
                   @ "day"
                   @~ <'GHC.Base.Just "day">_N
                   Datatypes.$fFromJSONDay16
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"day">_N)) -}
a87f2a4f9e20d592495cfa740e80d1d3
  $fFromJSONDay16 :: GHC.Generics.R:SingSymbols "day"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "day"
                   Datatypes.$fFromJSONDay17
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"day">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"day">_N))) -}
621009d9f59f04537bf8287113dca1d8
  $fFromJSONDay17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "day"#) -}
47af10cb723ad1f5931c24dd5b929b28
  $fFromJSONDay2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
1c5e26e2b9101ab5ae4fe8365de3a569
  $fFromJSONDay3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Day"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Day" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "day")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "start")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "end")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "day")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Datatypes.DayOfWeek))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "start")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "end")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Types.Int))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "day")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Datatypes.DayOfWeek))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "start")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "end")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "day")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "day")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek)
                                Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel2
                                Datatypes.$fFromJSONDay13
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            m2 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "start")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "start")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel1
                                Datatypes.$fFromJSONDay8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "end")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "end")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel
                                Datatypes.$fFromJSONDay8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "day")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 Datatypes.DayOfWeek))
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "start")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "end")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Types.Int))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "day")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "day")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                                         a1) ->
                              m2
                                `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "start")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a4 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "start")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                            a1) ->
                                 e `cast`
                                 (Data.Aeson.Types.Internal.N:Parser[0]
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int)
                                         a1>_R)
                                   @ f
                                   @ r
                                   path
                                   kf
                                   (\ (a3 :: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "end")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 GHC.Types.Int)
                                               a1) ->
                                    ks
                                      (GHC.Generics.:*:
                                         @ (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "day")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 Datatypes.DayOfWeek))
                                         @ (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "start")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Types.Int)
                                            GHC.Generics.:*: GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "end")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0 GHC.Types.Int))
                                         @ a1
                                         a2
                                         (GHC.Generics.:*:
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "start")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Types.Int))
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "end")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Types.Int))
                                            @ a1
                                            a4
                                            a3))))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "day")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 Datatypes.DayOfWeek))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "start")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Types.Int)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "end")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Types.Int))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "Day"
                                   "Datatypes"
                                   "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Day" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "day")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "start")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Int)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "end")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Int))))
                                a1)
                             f7
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "day")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Datatypes.DayOfWeek))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "start")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "end")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Types.Int))
                          a1>_R)
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "day")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Datatypes.DayOfWeek))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "start")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "end")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "Day" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "day")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "start")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Types.Int)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               GHC.Types.Int))>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "Day"
                                         "Datatypes"
                                         "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Day" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "day")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "start")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Types.Int)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Types.Int)))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "Day"
                                 "Datatypes"
                                 "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Day" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "day")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "start")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just "end")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Int))))
                              a1>_R))) -}
e45b9979ba7541b5683ac2cd924787f2
  $fFromJSONDay4 :: GHC.Generics.SingI ('GHC.Base.Just "end")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONDay5
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "end">_N) -}
c5b2e55e65d6577aeb760d106708a93e
  $fFromJSONDay5 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "end")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "end")
                   @ "end"
                   @~ <'GHC.Base.Just "end">_N
                   Datatypes.$fFromJSONDay6
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"end">_N)) -}
cbf65793f963027a76dc0294c7022add
  $fFromJSONDay6 :: GHC.Generics.R:SingSymbols "end"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "end"
                   Datatypes.$fFromJSONDay7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"end">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"end">_N))) -}
9c61236c7567d89b868e835ef489ff0c
  $fFromJSONDay7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "end"#) -}
1c24fe8d89138cf317191da6c3116f1d
  $fFromJSONDay8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ GHC.Types.Int
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONInt
                   @ a1
                   w3) -}
205752a9458b27be606b04e573b35df3
  $fFromJSONDay9 :: GHC.Generics.SingI ('GHC.Base.Just "start")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONDay10
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "start">_N) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fFromJSONDayOfWeek ::
    Data.Aeson.Types.FromJSON.FromJSON Datatypes.DayOfWeek
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.DayOfWeek
                  Datatypes.$fFromJSONDayOfWeek_$cparseJSON
                  Datatypes.$fFromJSONDayOfWeek_$cparseJSONList -}
16c043eeea3e74307b3fcc3c3668b61a
  $fFromJSONDayOfWeek1 ::
    [Data.Aeson.Types.Internal.Parser Datatypes.DayOfWeek]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Datatypes.DayOfWeek] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
f337811844f989a5feb26401004356d6
  $fFromJSONDayOfWeek10 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success (GHC.Generics.U1 a) f r
       -> f r
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (7, True, True)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a)
                   (contentsFieldName :: GHC.Base.String)
                   (x :: Data.Aeson.Types.Internal.Object)
                   @ (f :: * -> *)
                   @ r
                   (eta :: Data.Aeson.Types.Internal.JSONPath)
                   (eta1 :: Data.Aeson.Types.Internal.Failure f r)
                   (eta2 :: Data.Aeson.Types.Internal.Success
                              (GHC.Generics.U1 a) f r) ->
                 eta2 (GHC.Generics.U1 @ a)) -}
d545e7e219d9fc5ccf44ace2b9ebcd72
  $fFromJSONDayOfWeek11 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Datatypes.$w$dFromTaggedObject1
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
70f686bea038af3df6dc60d518fb1c98
  $fFromJSONDayOfWeek12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Th"#) -}
6a8b172e8608f15e333cea04ccab4e9a
  $fFromJSONDayOfWeek13 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Datatypes.$w$dFromTaggedObject2
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
41584c4cb4f8309d7ddd989c04a33439
  $fFromJSONDayOfWeek14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "We"#) -}
b44bb864c30895735ee0cc4d7ee20a67
  $fFromJSONDayOfWeek15 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Datatypes.$fFromJSONDayOfWeek18
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Datatypes.$fFromJSONDayOfWeek16
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
422995fb8e09e3a708da803e046937e6
  $fFromJSONDayOfWeek16 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Datatypes.$w$dFromTaggedObject3
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
43bfad2c707152deef87b3b061a13f44
  $fFromJSONDayOfWeek17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Tu"#) -}
7bc66ed3ef2a8eda9622e3992ff6a5f9
  $fFromJSONDayOfWeek18 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Datatypes.$w$dFromTaggedObject4
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
4312aaed31d07b0fc8dd26f1d1876ce0
  $fFromJSONDayOfWeek19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Mo"#) -}
a9d118fe52837ba25b7c2fc6c28f3d50
  $fFromJSONDayOfWeek2 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "DayOfWeek"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1)
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "Fr"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            GHC.Prim.Any)
  {- Unfolding: (Datatypes.$fFromJSONDayOfWeek3
                   @ GHC.Prim.Any
                   Data.Aeson.Types.Internal.defaultOptions
                   (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)) -}
c8df4c9100eb6fd40c6c00d7bc409ac9
  $fFromJSONDayOfWeek20 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: (GHC.Generics.C1
                                    ('GHC.Generics.MetaCons
                                       "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1))
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Fr"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   Datatypes.$fFromJSONDayOfWeek27
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1>_N))
                   Datatypes.$fFromJSONDayOfWeek21
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Fr"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))) -}
e0179df4ec893453f06b4f0466c56257
  $fFromJSONDayOfWeek21 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   Datatypes.$fFromJSONDayOfWeek26
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Datatypes.$fFromJSONDayOfWeek22
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
ba504806a6a7d7c54a2c5c4e49822bfc
  $fFromJSONDayOfWeek22 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Datatypes.$fFromJSONDayOfWeek25
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Datatypes.$fFromJSONDayOfWeek23
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
fdd3153f8cadaac167dfea1c5962c2ce
  $fFromJSONDayOfWeek23 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Datatypes.$w$dFromPair
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
c0ce27fd96b8e994bc1c692d1a6c0e74
  $fFromJSONDayOfWeek24 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser (GHC.Generics.U1 a)
  {- Arity: 3,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)><L,A><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a)
                   (v :: Data.Aeson.Types.Internal.Value) ->
                 case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                 case ds6 of wild1 { DEFAULT ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON3
                   @ Data.Aeson.Types.Generic.Zero
                   @ a
                   v } }) -}
e2b836241e32ce0609c9f292be5f5d8c
  $fFromJSONDayOfWeek25 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Datatypes.$w$dFromPair1
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
262dd16002c62e4fe3101d747d835664
  $fFromJSONDayOfWeek26 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Datatypes.$w$dFromPair2
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
a6263bea05068b165c674d6cc38990d5
  $fFromJSONDayOfWeek27 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Datatypes.$fFromJSONDayOfWeek29
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Datatypes.$fFromJSONDayOfWeek28
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
96deae85948fd5e1f789e018bbd1cc7f
  $fFromJSONDayOfWeek28 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Datatypes.$w$dFromPair3
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
a9afecc890af1e4d0aed8e0ba485972b
  $fFromJSONDayOfWeek29 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Datatypes.$w$dFromPair4
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
c23d78690b10659287aeaf2266d79262
  $fFromJSONDayOfWeek3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "DayOfWeek"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1)
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "Fr"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
            a1)
  {- Arity: 2, Strictness: <L,1*U(U,U,U,U,U,U)><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1) ->
                 let {
                   g :: Data.Aeson.Types.Internal.Value
                        -> Data.Tagged.Tagged
                             Data.Aeson.Types.Generic.True
                             (Data.Aeson.Types.Internal.Parser
                                ((GHC.Generics.:+:)
                                   (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Tu"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1)
                                   (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: (GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           "Th"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1
                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                         ('GHC.Generics.MetaCons
                                                                            "Fr"
                                                                            'GHC.Generics.PrefixI
                                                                            'GHC.Types.False)
                                                                         GHC.Generics.U1))
                                   a1))
                   = case opts of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                     Data.Aeson.Types.FromJSON.$w$cparseSum
                       @ (GHC.Generics.C1
                            ('GHC.Generics.MetaCons
                               "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.C1
                                             ('GHC.Generics.MetaCons
                                                "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1)
                       @ (GHC.Generics.C1
                            ('GHC.Generics.MetaCons
                               "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: (GHC.Generics.C1
                                              ('GHC.Generics.MetaCons
                                                 "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1
                                            GHC.Generics.:+: GHC.Generics.C1
                                                               ('GHC.Generics.MetaCons
                                                                  "Fr"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.False)
                                                               GHC.Generics.U1))
                       @ Data.Aeson.Types.Generic.Zero
                       Datatypes.$fFromJSONDayOfWeek30
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:SumFromString[0]
                                 <GHC.Types.*>_N
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Tu"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "We"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Th"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Fr"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))>_N))
                       Datatypes.$fFromJSONDayOfWeek20
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Tu"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "We"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Th"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Fr"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))>_N))
                       Datatypes.$fFromJSONDayOfWeek5
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Tu"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "We"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Th"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Fr"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))>_N))
                       Datatypes.$fFromJSONDayOfWeek4
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:FromUntaggedValue[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Tu"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "We"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Th"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Fr"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))>_N))
                       @ a1
                       ww1
                       ww2
                       ww3
                       ww4
                       ww5
                       ww6
                       fargs }
                 } in
                 \ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Tagged.Tagged
                          Data.Aeson.Types.Generic.True
                          (Data.Aeson.Types.Internal.Parser
                             ((GHC.Generics.:+:)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: (GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Fr"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1))
                                a1))
                   = g x
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "DayOfWeek"
                                   "Datatypes"
                                   "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                   'GHC.Types.False)
                                ((GHC.Generics.C1
                                    ('GHC.Generics.MetaCons
                                       "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1)
                                 GHC.Generics.:+: (GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: (GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Th"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "Fr"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        GHC.Generics.U1)))
                                a1)
                             f7
                             r) ->
                  m `cast`
                  (Trans
                       (Data.Tagged.N:Tagged[0]
                            <*>_N
                            <Data.Aeson.Types.Generic.True>_P
                            <Data.Aeson.Types.Internal.Parser
                               ((GHC.Generics.:+:)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Tu"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Th"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Fr"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  a1)>_R)
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <(GHC.Generics.:+:)
                               (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1)
                               (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Fr"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1))
                               a1>_R))
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:+:)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: (GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Fr"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:M1[0]
                                 <GHC.Generics.D>_P
                                 <'GHC.Generics.MetaData
                                    "DayOfWeek"
                                    "Datatypes"
                                    "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                    'GHC.Types.False>_P
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Tu"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "We"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: (GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Th"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1
                                                                      GHC.Generics.:+: GHC.Generics.C1
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "Fr"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False)
                                                                                         GHC.Generics.U1))>_R) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "DayOfWeek"
                                 "Datatypes"
                                 "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                 'GHC.Types.False)
                              ((GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1)
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: (GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Th"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1
                                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                                      ('GHC.Generics.MetaCons
                                                                                         "Fr"
                                                                                         'GHC.Generics.PrefixI
                                                                                         'GHC.Types.False)
                                                                                      GHC.Generics.U1)))
                              a1>_R))) -}
0149d6487f7474e0f82a4e5fbd2c6e30
  $fFromJSONDayOfWeek30 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1))
            a1)
  {- Arity: 2,
     Strictness: <S(LC(S)LLLL),1*U(A,C(U),A,A,A,A)><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Datatypes.$w$dSumFromString @ a1 ww2 ww8 ww9 ww10 } }) -}
b606c2549b49067bbe75d6f19b421297
  $fFromJSONDayOfWeek4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:+:)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1))
            a1)
  {- Arity: 3, Strictness: <L,U(A,C(U),A,A,A,A)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 Datatypes.$w$dFromUntaggedValue @ a1 w w2) -}
df3b63e0c76d1946cba538649725b54a
  $fFromJSONDayOfWeek5 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: (GHC.Generics.C1
                                    ('GHC.Generics.MetaCons
                                       "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1))
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Fr"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   Datatypes.$fFromJSONDayOfWeek15
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1>_N))
                   Datatypes.$fFromJSONDayOfWeek6
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Fr"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))) -}
aa76e2bb3bd3848c99ea8919528ad844
  $fFromJSONDayOfWeek6 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   Datatypes.$fFromJSONDayOfWeek13
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Datatypes.$fFromJSONDayOfWeek7
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
63f6757b25bbbd21bcd8d3bd5c637601
  $fFromJSONDayOfWeek7 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Datatypes.$fFromJSONDayOfWeek11
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Datatypes.$fFromJSONDayOfWeek8
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
899a158e03ba6d223b311a1bd1972026
  $fFromJSONDayOfWeek8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Datatypes.$w$dFromTaggedObject
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
3e6d3c87c4c1bf0586a314fd6529e46a
  $fFromJSONDayOfWeek9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Fr"#) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fFromJSONDayOfWeek_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Datatypes.DayOfWeek
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "DayOfWeek"
                                "Datatypes"
                                "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                'GHC.Types.False)
                             ((GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: (GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "Th"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1
                                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                                     ('GHC.Generics.MetaCons
                                                                                        "Fr"
                                                                                        'GHC.Generics.PrefixI
                                                                                        'GHC.Types.False)
                                                                                     GHC.Generics.U1)))
                             GHC.Prim.Any)
                   = Datatypes.$fFromJSONDayOfWeek2 x
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             Datatypes.DayOfWeek f7 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Datatypes.Rep_DayOfWeek[0])) <GHC.Prim.Any>_N))
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Datatypes.DayOfWeek GHC.Prim.Any) ->
                     ks (Datatypes.$fFromJSONDayOfWeek_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <Datatypes.DayOfWeek>_R))) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fFromJSONDayOfWeek_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Datatypes.DayOfWeek]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Datatypes.DayOfWeek]
                        Datatypes.$fFromJSONDay2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Datatypes.$fFromJSONDayOfWeek1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Datatypes.$fFromJSONDayOfWeek_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Datatypes.DayOfWeek]>_R)) } }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fFromJSONDayOfWeek_$cto ::
    GHC.Generics.Rep Datatypes.DayOfWeek x -> Datatypes.DayOfWeek
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x (ds :: GHC.Generics.Rep Datatypes.DayOfWeek x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Datatypes.Rep_DayOfWeek[0]))
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "DayOfWeek"
                                   "Datatypes"
                                   "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                   'GHC.Types.False>_P
                                <(GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: GHC.Generics.M1
                                                     GHC.Generics.C
                                                     ('GHC.Generics.MetaCons
                                                        "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1)
                                 GHC.Generics.:+: (GHC.Generics.M1
                                                     GHC.Generics.C
                                                     ('GHC.Generics.MetaCons
                                                        "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: (GHC.Generics.M1
                                                                       GHC.Generics.C
                                                                       ('GHC.Generics.MetaCons
                                                                          "Th"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1
                                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                                        GHC.Generics.C
                                                                                        ('GHC.Generics.MetaCons
                                                                                           "Fr"
                                                                                           'GHC.Generics.PrefixI
                                                                                           'GHC.Types.False)
                                                                                        GHC.Generics.U1))>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2 -> case ds2 of tpl { DEFAULT -> Datatypes.Mo }
                        GHC.Generics.R1 ds2
                        -> case ds2 of tpl { DEFAULT -> Datatypes.Tu } }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2 -> case ds2 of tpl { DEFAULT -> Datatypes.We }
                        GHC.Generics.R1 ds2
                        -> case ds2 of wild2 {
                             GHC.Generics.L1 ds3 -> case ds3 of tpl { DEFAULT -> Datatypes.Th }
                             GHC.Generics.R1 ds3
                             -> case ds3 of tpl { DEFAULT -> Datatypes.Fr } } } }) -}
6b36f407ffbad3caa75be3b603e2cb8b
  $fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Fr"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek9
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Fr">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Fr">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Fr"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek9
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Fr">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Fr">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Fr"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek9
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Fr">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Fr">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
7981e6806a6c8a3f8053d28cf3e6033d
  $fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons1 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Th"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek12
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Th">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Th">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Th"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek12
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Th">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Th">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Th"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek12
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Th">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Th">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
4aa3cd3e7d7f0a2a61073957f9e64929
  $fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons2 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "We"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek14
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"We">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"We">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "We"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek14
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"We">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"We">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "We"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek14
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"We">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"We">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
88f864bbff8679232bef623a754d5e19
  $fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons3 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Tu"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek17
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Tu">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Tu">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Tu"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek17
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Tu">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Tu">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Tu"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek17
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Tu">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Tu">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
ba5422f7d69e50048d40d37150c4a04a
  $fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons4 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Mo"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek19
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Mo">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Mo">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Mo"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek19
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Mo">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Mo">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Mo"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Datatypes.$fFromJSONDayOfWeek19
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Mo">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Mo">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fFromJSONDayOfWeek_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Datatypes.DayOfWeek]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONDay_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Datatypes.Day
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Day"
                                "Datatypes"
                                "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Day" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "day")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "start")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just "end")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         GHC.Types.Int))))
                             GHC.Prim.Any)
                   = Datatypes.$fFromJSONDay3
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success Datatypes.Day f7 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Datatypes.Rep_Day[0])) <GHC.Prim.Any>_N))
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Datatypes.Day GHC.Prim.Any) ->
                     ks (Datatypes.$fFromJSONDay_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Datatypes.Day>_R))) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONDay_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Datatypes.Day]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Datatypes.Day]
                        Datatypes.$fFromJSONDay2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Datatypes.$fFromJSONDay1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Datatypes.$fFromJSONDay_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Datatypes.Day]>_R)) } }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONDay_$cto ::
    GHC.Generics.Rep Datatypes.Day x -> Datatypes.Day
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Datatypes.Day x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Datatypes.Rep_Day[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Day"
                                        "Datatypes"
                                        "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Day" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "day")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "start")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "end")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Int)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Day" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "day")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "start")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Types.Int)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just "end")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              GHC.Types.Int))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 Datatypes.Day
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "day")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Datatypes.DayOfWeek>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P)) } }) -}
21886f5756f4bc5fc39c2772ed828eef
  $fFromJSONDay_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "end")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "end")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "end")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONDay4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "end")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONDay4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "end")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONDay4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
9b175fd5914d144947bf9531b44356b0
  $fFromJSONDay_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "start")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "start")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "start")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONDay9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "start")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONDay9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "start")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONDay9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
1063643cc8486550ac7fd3e6a9acdd80
  $fFromJSONDay_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "day")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "day")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "day")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONDay14
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "day")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONDay14
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "day")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONDay14
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
5872ddedd3d7432cfbfb5ad87f240ada
  $fFromJSONDay_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "end")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "end")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONDay7) -}
80016d8991ebda63e6b0a7f0ede46425
  $fFromJSONDay_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "start")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "start")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONDay12) -}
56b63f7729d93149ed86f9a2c25c959a
  $fFromJSONDay_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "day")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "day")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONDay17) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONDay_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Datatypes.Day]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
877615fc906ccaad066e29ffd79dc9be
  $fFromJSONEverything ::
    Data.Aeson.Types.FromJSON.FromJSON Datatypes.Everything
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Everything
                  Datatypes.$fFromJSONEverything_$cparseJSON
                  Datatypes.$fFromJSONEverything_$cparseJSONList -}
877615fc906ccaad066e29ffd79dc9be
  $fFromJSONEverything1 ::
    [Data.Aeson.Types.Internal.Parser Datatypes.Everything]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Datatypes.Everything] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
33f6248603e5204c08ae38395b133118
  $fFromJSONEverything2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Everything"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.True)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Everything" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "courses")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [Datatypes.FullCourse])))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "courses")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [Datatypes.FullCourse])
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 {
                       GHC.Types.False
                       -> case x of wild2 {
                            DEFAULT
                            -> Data.Aeson.Types.FromJSON.typeMismatch
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "courses")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [Datatypes.FullCourse])
                                      a1)
                                 Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                                 wild2
                            Data.Aeson.Types.Internal.Object obj
                            -> Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                 @ ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "courses")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                 @ Data.Aeson.Types.Generic.Zero
                                 @ (GHC.Generics.K1 GHC.Generics.R [Datatypes.FullCourse])
                                 Datatypes.$fFromJSONEverything_$s$fSelectorMetaMetaSel
                                 Datatypes.$fFromJSONEverything3
                                   `cast`
                                 (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                           <Data.Aeson.Types.Generic.Zero>_N
                                           <GHC.Generics.K1
                                              GHC.Generics.R [Datatypes.FullCourse]>_N))
                                 @ a1
                                 wild
                                 fargs
                                 (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                 obj }
                       GHC.Types.True
                       -> case Data.Aeson.Types.Internal.$sfromList1
                                 @ Data.Aeson.Types.Internal.Value
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Data.Aeson.Types.FromJSON.$fConsFromJSONarityf2, x)
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                 (Data.HashMap.Base.Empty
                                    @ Data.Text.Internal.Text
                                    @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                          Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "courses")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ Data.Aeson.Types.Generic.Zero
                            @ (GHC.Generics.K1 GHC.Generics.R [Datatypes.FullCourse])
                            Datatypes.$fFromJSONEverything_$s$fSelectorMetaMetaSel
                            Datatypes.$fFromJSONEverything3
                              `cast`
                            (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                      <Data.Aeson.Types.Generic.Zero>_N
                                      <GHC.Generics.K1 GHC.Generics.R [Datatypes.FullCourse]>_N))
                            @ a1
                            wild
                            fargs
                            Data.Aeson.Types.FromJSON.$fConsFromJSONarityf1
                            dt } } }
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "Everything"
                                   "Datatypes"
                                   "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                   'GHC.Types.True)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Everything" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "courses")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [Datatypes.FullCourse])))
                                a1)
                             f7
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "courses")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 [Datatypes.FullCourse])
                          a1>_R)
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "courses")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [Datatypes.FullCourse])
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "Everything" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "courses")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [Datatypes.FullCourse])>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "Everything"
                                         "Datatypes"
                                         "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                         'GHC.Types.True>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Everything" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "courses")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0
                                               [Datatypes.FullCourse]))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "Everything"
                                 "Datatypes"
                                 "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                 'GHC.Types.True)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Everything" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "courses")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Datatypes.FullCourse])))
                              a1>_R))) -}
731ba789af0054311e96fdfa288d42f6
  $fFromJSONEverything3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [Datatypes.FullCourse] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [Datatypes.FullCourse]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Datatypes.$fFromJSONEverything_$s$fFromJSON[]
                   @ a1
                   w3) -}
021efb0ebd34a11073dac78d6dd73810
  $fFromJSONEverything4 ::
    GHC.Generics.SingI ('GHC.Base.Just "courses")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONEverything5
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "courses">_N) -}
a6c23c480940088fe8a02fa2c29a9904
  $fFromJSONEverything5 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "courses")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "courses")
                   @ "courses"
                   @~ <'GHC.Base.Just "courses">_N
                   Datatypes.$fFromJSONEverything6
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"courses">_N)) -}
f0812c9d19941a79b8660b832ddcecb2
  $fFromJSONEverything6 :: GHC.Generics.R:SingSymbols "courses"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "courses"
                   Datatypes.$fFromJSONEverything7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"courses">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"courses">_N))) -}
af305ebce9985f516c14419cd63754ec
  $fFromJSONEverything7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "courses"#) -}
877615fc906ccaad066e29ffd79dc9be
  $fFromJSONEverything_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Datatypes.Everything
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Everything"
                                "Datatypes"
                                "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                'GHC.Types.True)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Everything" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "courses")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [Datatypes.FullCourse])))
                             GHC.Prim.Any)
                   = Datatypes.$fFromJSONEverything2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             Datatypes.Everything f7 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Datatypes.Rep_Everything[0])) <GHC.Prim.Any>_N))
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Datatypes.Everything GHC.Prim.Any) ->
                     ks
                       a1
                         `cast`
                       (Trans
                            (Trans
                                 (Sub (Datatypes.Rep_Everything[0]))
                                 (Trans
                                      (GHC.Generics.N:M1[0]
                                           <GHC.Generics.D>_P
                                           <'GHC.Generics.MetaData
                                              "Everything"
                                              "Datatypes"
                                              "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                              'GHC.Types.True>_P
                                           <GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Everything" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "courses")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R [Datatypes.FullCourse]))>_R)
                                      (Trans
                                           (GHC.Generics.N:M1[0]
                                                <GHC.Generics.C>_P
                                                <'GHC.Generics.MetaCons
                                                   "Everything"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.True>_P
                                                <GHC.Generics.M1
                                                   GHC.Generics.S
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "courses")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.K1
                                                      GHC.Generics.R [Datatypes.FullCourse])>_R)
                                           (GHC.Generics.N:M1[0]
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "courses")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [Datatypes.FullCourse]>_R))) <GHC.Prim.Any>_N)
                            (Trans
                                 (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P
                                      <[Datatypes.FullCourse]>_R
                                      <GHC.Prim.Any>_P)
                                 (Sym (Datatypes.N:Everything[0]))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <Datatypes.Everything>_R))) -}
877615fc906ccaad066e29ffd79dc9be
  $fFromJSONEverything_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Datatypes.Everything]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Datatypes.Everything]
                        Datatypes.$fFromJSONDay2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Datatypes.$fFromJSONEverything1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Datatypes.$fFromJSONEverything_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Datatypes.Everything]>_R)) } }) -}
5b17659962c35b79f0a6935f1b52db80
  $fFromJSONEverything_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [Datatypes.FullCourse]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Datatypes.FullCourse]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ Datatypes.FullCourse
                     Datatypes.$fFromJSONFullCourse)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ Datatypes.FullCourse
                     Datatypes.$fFromJSONFullCourse) -}
fc9d68c874a7c47e5c2525191cd724a0
  $fFromJSONEverything_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "courses")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "courses")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONEverything_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "courses")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONEverything4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "courses")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONEverything4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "courses")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONEverything4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
f340041950e8fc40c2db269b422a5e24
  $fFromJSONEverything_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "courses")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "courses")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONEverything7) -}
877615fc906ccaad066e29ffd79dc9be
  $fFromJSONEverything_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Datatypes.Everything]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fFromJSONFullCourse ::
    Data.Aeson.Types.FromJSON.FromJSON Datatypes.FullCourse
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.FullCourse
                  Datatypes.$fFromJSONFullCourse_$cparseJSON
                  Datatypes.$fFromJSONFullCourse_$cparseJSONList -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fFromJSONFullCourse1 ::
    [Data.Aeson.Types.Internal.Parser Datatypes.FullCourse]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Datatypes.FullCourse] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
c4954c7c23c01e8e95de0f860d47f4d8
  $fFromJSONFullCourse10 :: GHC.Generics.R:SingSymbols "courseNum"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "courseNum"
                   Datatypes.$fFromJSONFullCourse11
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"courseNum">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"courseNum">_N))) -}
2e8859932050d91bccb74424ef19ac0e
  $fFromJSONFullCourse11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "courseNum"#) -}
68fd84349c8f7f05f688955a43c26885
  $fFromJSONFullCourse12 ::
    GHC.Generics.SingI ('GHC.Base.Just "courseTitle")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONFullCourse13
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "courseTitle">_N) -}
a21176b108f280a1193e81f6082fec21
  $fFromJSONFullCourse13 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "courseTitle")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "courseTitle")
                   @ "courseTitle"
                   @~ <'GHC.Base.Just "courseTitle">_N
                   Datatypes.$fFromJSONFullCourse14
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"courseTitle">_N)) -}
6b9ba75077702bc3f00acda2e406bca7
  $fFromJSONFullCourse14 :: GHC.Generics.R:SingSymbols "courseTitle"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "courseTitle"
                   Datatypes.$fFromJSONFullCourse15
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"courseTitle">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"courseTitle">_N))) -}
f572492466dfa4351d3eecf3a9abffac
  $fFromJSONFullCourse15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "courseTitle"#) -}
3a3f93a47e219ddaabb93423cc2207bf
  $fFromJSONFullCourse2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "FullCourse"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "courseTitle")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "courseNum")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "sections")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Datatypes.Section]))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "courseTitle")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "courseNum")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "sections")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [Datatypes.Section]))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "courseTitle")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "courseNum")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "sections")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Datatypes.Section]))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "courseTitle")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "courseTitle")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel2
                                Datatypes.$fFromJSONSection12
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            m2 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "courseNum")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "courseNum")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel1
                                Datatypes.$fFromJSONSection12
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "sections")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [Datatypes.Section])
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "sections")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R [Datatypes.Section])
                                Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel
                                Datatypes.$fFromJSONFullCourse3
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [Datatypes.Section]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "courseTitle")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "courseNum")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "sections")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                [Datatypes.Section]))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "courseTitle")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "courseTitle")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                         a1) ->
                              m2
                                `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "courseNum")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a4 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "courseNum")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                            a1) ->
                                 e `cast`
                                 (Data.Aeson.Types.Internal.N:Parser[0]
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "sections")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [Datatypes.Section])
                                         a1>_R)
                                   @ f
                                   @ r
                                   path
                                   kf
                                   (\ (a3 :: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "sections")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 [Datatypes.Section])
                                               a1) ->
                                    ks
                                      (GHC.Generics.:*:
                                         @ (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "courseTitle")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                         @ (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "courseNum")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String)
                                            GHC.Generics.:*: GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "sections")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0
                                                                  [Datatypes.Section]))
                                         @ a1
                                         a2
                                         (GHC.Generics.:*:
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "courseNum")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "sections")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [Datatypes.Section]))
                                            @ a1
                                            a4
                                            a3))))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "courseTitle")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "courseNum")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "sections")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 [Datatypes.Section]))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "FullCourse"
                                   "Datatypes"
                                   "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "courseTitle")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "courseNum")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Base.String)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "sections")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [Datatypes.Section]))))
                                a1)
                             f7
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "courseTitle")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "courseNum")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "sections")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 [Datatypes.Section]))
                          a1>_R)
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "courseTitle")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "courseNum")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "sections")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 [Datatypes.Section]))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "courseTitle")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "courseNum")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "sections")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               [Datatypes.Section]))>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "FullCourse"
                                         "Datatypes"
                                         "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "courseTitle")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "courseNum")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Base.String)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "sections")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  [Datatypes.Section])))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "FullCourse"
                                 "Datatypes"
                                 "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "courseTitle")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "courseNum")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "sections")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          [Datatypes.Section]))))
                              a1>_R))) -}
682ca7e48248c3d4622628784d3393b2
  $fFromJSONFullCourse3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [Datatypes.Section] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [Datatypes.Section]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Datatypes.$fFromJSONFullCourse_$s$fFromJSON[]
                   @ a1
                   w3) -}
25847b42d19c9bf1de26ea15f27a78e0
  $fFromJSONFullCourse4 ::
    GHC.Generics.SingI ('GHC.Base.Just "sections")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONFullCourse5
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "sections">_N) -}
f9415699ee48a69afd4ce0aeaf3db434
  $fFromJSONFullCourse5 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "sections")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "sections")
                   @ "sections"
                   @~ <'GHC.Base.Just "sections">_N
                   Datatypes.$fFromJSONFullCourse6
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"sections">_N)) -}
bd41b2964c876edcbf9e51dbda8ea5a7
  $fFromJSONFullCourse6 :: GHC.Generics.R:SingSymbols "sections"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "sections"
                   Datatypes.$fFromJSONFullCourse7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"sections">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"sections">_N))) -}
ee266098d8518547c0d25c2b7f559faa
  $fFromJSONFullCourse7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sections"#) -}
5d83d39ef42e3dfeb2dbe3a17a138969
  $fFromJSONFullCourse8 ::
    GHC.Generics.SingI ('GHC.Base.Just "courseNum")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONFullCourse9
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "courseNum">_N) -}
efe3f6faf58a8a3061ea5847eb066953
  $fFromJSONFullCourse9 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "courseNum")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "courseNum")
                   @ "courseNum"
                   @~ <'GHC.Base.Just "courseNum">_N
                   Datatypes.$fFromJSONFullCourse10
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"courseNum">_N)) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fFromJSONFullCourse_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Datatypes.FullCourse
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "FullCourse"
                                "Datatypes"
                                "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "courseTitle")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "courseNum")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just "sections")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         [Datatypes.Section]))))
                             GHC.Prim.Any)
                   = Datatypes.$fFromJSONFullCourse2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             Datatypes.FullCourse f7 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Datatypes.Rep_FullCourse[0])) <GHC.Prim.Any>_N))
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Datatypes.FullCourse GHC.Prim.Any) ->
                     ks (Datatypes.$fFromJSONFullCourse_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <Datatypes.FullCourse>_R))) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fFromJSONFullCourse_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Datatypes.FullCourse]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Datatypes.FullCourse]
                        Datatypes.$fFromJSONDay2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Datatypes.$fFromJSONFullCourse1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Datatypes.$fFromJSONFullCourse_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Datatypes.FullCourse]>_R)) } }) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fFromJSONFullCourse_$cto ::
    GHC.Generics.Rep Datatypes.FullCourse x -> Datatypes.FullCourse
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Datatypes.FullCourse x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Datatypes.Rep_FullCourse[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "FullCourse"
                                        "Datatypes"
                                        "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "courseTitle")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "courseNum")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "sections")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Datatypes.Section])))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "courseTitle")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "courseNum")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "sections")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [Datatypes.Section]))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 Datatypes.FullCourse
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "courseTitle")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "courseNum")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "sections")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Datatypes.Section]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <[Datatypes.Section]>_R <x>_P)) } }) -}
d8ce93a2175f15d8295e20b03c60fe6a
  $fFromJSONFullCourse_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [Datatypes.Section]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Datatypes.Section]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ Datatypes.Section
                     Datatypes.$fFromJSONSection)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ Datatypes.Section
                     Datatypes.$fFromJSONSection) -}
2ec7eb68af56422f193a177fc0479fd5
  $fFromJSONFullCourse_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "sections")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "sections")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "sections")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONFullCourse4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "sections")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONFullCourse4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "sections")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONFullCourse4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
4cdbdcbe574209e7e840b48b037f38db
  $fFromJSONFullCourse_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "courseNum")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "courseNum")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "courseNum")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONFullCourse8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "courseNum")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONFullCourse8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "courseNum")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONFullCourse8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
7f43bb53082cc8dd846f868800a49d1e
  $fFromJSONFullCourse_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "courseTitle")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "courseTitle")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "courseTitle")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONFullCourse12
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "courseTitle")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONFullCourse12
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "courseTitle")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONFullCourse12
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
4565b042ba9db6e88d1a5c7b10203de9
  $fFromJSONFullCourse_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "sections")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "sections")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONFullCourse7) -}
8d1847b288369b378ce65342b7becebe
  $fFromJSONFullCourse_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "courseNum")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "courseNum")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONFullCourse11) -}
582f12401698c05138e4b4a8ad65e296
  $fFromJSONFullCourse_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "courseTitle")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "courseTitle")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONFullCourse15) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fFromJSONFullCourse_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Datatypes.FullCourse]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONSection ::
    Data.Aeson.Types.FromJSON.FromJSON Datatypes.Section
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Section
                  Datatypes.$fFromJSONSection_$cparseJSON
                  Datatypes.$fFromJSONSection_$cparseJSONList -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONSection1 ::
    [Data.Aeson.Types.Internal.Parser Datatypes.Section]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Datatypes.Section] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
952159f45b21871b0086aed0fb60c4f8
  $fFromJSONSection10 :: GHC.Generics.R:SingSymbols "sectionNum"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "sectionNum"
                   Datatypes.$fFromJSONSection11
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"sectionNum">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"sectionNum">_N))) -}
530735b0e47f5c8c285ca9d63c600537
  $fFromJSONSection11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sectionNum"#) -}
47d98e6443307665ba4fdf35c3421716
  $fFromJSONSection12 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [GHC.Types.Char]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Datatypes.$fFromJSONSection_$s$fFromJSON[]1
                   @ a1
                   w3) -}
aae3aa8be0d345a4da45199ea108aaa9
  $fFromJSONSection13 ::
    GHC.Generics.SingI ('GHC.Base.Just "instructor")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONSection14
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "instructor">_N) -}
aeb47ea0ba9c74235b0f61a303e8cdab
  $fFromJSONSection14 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "instructor")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "instructor")
                   @ "instructor"
                   @~ <'GHC.Base.Just "instructor">_N
                   Datatypes.$fFromJSONSection15
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"instructor">_N)) -}
3cda45826b171d03d43b7325fdb83922
  $fFromJSONSection15 :: GHC.Generics.R:SingSymbols "instructor"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "instructor"
                   Datatypes.$fFromJSONSection16
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"instructor">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"instructor">_N))) -}
75e7deb6906940c74fa474b472147a75
  $fFromJSONSection16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "instructor"#) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONSection2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Section"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Section" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "instructor")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "sectionNum")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "schedules")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Datatypes.Day]))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "instructor")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "sectionNum")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "schedules")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [Datatypes.Day]))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "instructor")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "sectionNum")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "schedules")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Datatypes.Day]))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "instructor")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "instructor")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel2
                                Datatypes.$fFromJSONSection12
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            m2 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "sectionNum")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "sectionNum")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel1
                                Datatypes.$fFromJSONSection12
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "schedules")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [Datatypes.Day])
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "schedules")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R [Datatypes.Day])
                                Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel
                                Datatypes.$fFromJSONSection3
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [Datatypes.Day]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "instructor")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "sectionNum")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "schedules")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 [Datatypes.Day]))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "instructor")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "instructor")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                         a1) ->
                              m2
                                `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "sectionNum")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a4 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "sectionNum")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                            a1) ->
                                 e `cast`
                                 (Data.Aeson.Types.Internal.N:Parser[0]
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "schedules")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [Datatypes.Day])
                                         a1>_R)
                                   @ f
                                   @ r
                                   path
                                   kf
                                   (\ (a3 :: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "schedules")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 [Datatypes.Day])
                                               a1) ->
                                    ks
                                      (GHC.Generics.:*:
                                         @ (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "instructor")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                         @ (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "sectionNum")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String)
                                            GHC.Generics.:*: GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "schedules")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0 [Datatypes.Day]))
                                         @ a1
                                         a2
                                         (GHC.Generics.:*:
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "sectionNum")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "schedules")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [Datatypes.Day]))
                                            @ a1
                                            a4
                                            a3))))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "instructor")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "sectionNum")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "schedules")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 [Datatypes.Day]))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "Section"
                                   "Datatypes"
                                   "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Section" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "instructor")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "sectionNum")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Base.String)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "schedules")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [Datatypes.Day]))))
                                a1)
                             f7
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "instructor")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "sectionNum")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "schedules")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 [Datatypes.Day]))
                          a1>_R)
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "instructor")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "sectionNum")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "schedules")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 [Datatypes.Day]))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "Section" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "instructor")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "sectionNum")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "schedules")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               [Datatypes.Day]))>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "Section"
                                         "Datatypes"
                                         "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Section" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "instructor")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "sectionNum")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Base.String)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "schedules")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  [Datatypes.Day])))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "Section"
                                 "Datatypes"
                                 "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Section" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "instructor")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "sectionNum")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "schedules")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          [Datatypes.Day]))))
                              a1>_R))) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONSection3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [Datatypes.Day] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [Datatypes.Day]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Datatypes.$fFromJSONSection_$s$fFromJSON[]
                   @ a1
                   w3) -}
6169daeeab178a4441288910a25a0603
  $fFromJSONSection4 ::
    GHC.Generics.SingI ('GHC.Base.Just "schedules")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONSection5
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "schedules">_N) -}
b64ca583bbe93f65c2ffc43ac2b41736
  $fFromJSONSection5 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "schedules")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "schedules")
                   @ "schedules"
                   @~ <'GHC.Base.Just "schedules">_N
                   Datatypes.$fFromJSONSection6
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"schedules">_N)) -}
f4682988fe9caa98886dc29173efb5c3
  $fFromJSONSection6 :: GHC.Generics.R:SingSymbols "schedules"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "schedules"
                   Datatypes.$fFromJSONSection7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"schedules">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"schedules">_N))) -}
09b3021aa1c195272c7a2477af4d3f45
  $fFromJSONSection7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "schedules"#) -}
4fb9d1e5ba7c3a8e373b4667c425a23d
  $fFromJSONSection8 ::
    GHC.Generics.SingI ('GHC.Base.Just "sectionNum")
  {- Unfolding: InlineRule (0, True, True)
                Datatypes.$fFromJSONSection9
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "sectionNum">_N) -}
0d4db083cf50f597a563a7f8859d529b
  $fFromJSONSection9 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "sectionNum")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "sectionNum")
                   @ "sectionNum"
                   @~ <'GHC.Base.Just "sectionNum">_N
                   Datatypes.$fFromJSONSection10
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"sectionNum">_N)) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONSection_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Datatypes.Section
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Section"
                                "Datatypes"
                                "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Section" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "instructor")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "sectionNum")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "schedules")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         [Datatypes.Day]))))
                             GHC.Prim.Any)
                   = Datatypes.$fFromJSONSection2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f7 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f7 r)
                    (ks :: Data.Aeson.Types.Internal.Success Datatypes.Section f7 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Datatypes.Rep_Section[0])) <GHC.Prim.Any>_N))
                    @ f7
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Datatypes.Section GHC.Prim.Any) ->
                     ks (Datatypes.$fFromJSONSection_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <Datatypes.Section>_R))) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONSection_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Datatypes.Section]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Datatypes.Section]
                        Datatypes.$fFromJSONDay2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Datatypes.$fFromJSONSection1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Datatypes.$fFromJSONSection_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Datatypes.Section]>_R)) } }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONSection_$cto ::
    GHC.Generics.Rep Datatypes.Section x -> Datatypes.Section
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Datatypes.Section x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Datatypes.Rep_Section[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Section"
                                        "Datatypes"
                                        "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Section" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "instructor")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "sectionNum")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "schedules")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Datatypes.Day])))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Section" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "instructor")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "sectionNum")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "schedules")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [Datatypes.Day]))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 Datatypes.Section
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "instructor")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "sectionNum")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "schedules")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Datatypes.Day]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <[Datatypes.Day]>_R <x>_P)) } }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONSection_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [Datatypes.Day]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Datatypes.Day]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ Datatypes.Day
                     Datatypes.$fFromJSONDay)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ Datatypes.Day
                     Datatypes.$fFromJSONDay) -}
f62aff9aaf0a46a3ace4e85aed42c708
  $fFromJSONSection_$s$fFromJSON[]1 ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar) -}
5011383f3949c8e91dbd20091c34b589
  $fFromJSONSection_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "schedules")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "schedules")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "schedules")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONSection4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "schedules")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONSection4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "schedules")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONSection4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
13c648529b8e64bf9d5161a36a4c0c76
  $fFromJSONSection_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "sectionNum")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "sectionNum")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "sectionNum")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONSection8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "sectionNum")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONSection8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "sectionNum")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONSection8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
35172171419d106d7257ad31cb55b62b
  $fFromJSONSection_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "instructor")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "instructor")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "instructor")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONSection13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "instructor")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONSection13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "instructor")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datatypes.$fFromJSONSection13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
d63c9be259ea87b16b19fab8cabebe3b
  $fFromJSONSection_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "schedules")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "schedules")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONSection7) -}
3afdab478d47f5e80779853a878f35f2
  $fFromJSONSection_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "sectionNum")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "sectionNum")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONSection11) -}
fbc1c26c356a292207d759811541d1e7
  $fFromJSONSection_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "instructor")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "instructor")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datatypes.$fFromJSONSection16) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fFromJSONSection_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Datatypes.Section]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
ad58660113478d00359ba2ff2cfc4dc2
  $fGenericDay :: GHC.Generics.Generic Datatypes.Day
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Day
                  Datatypes.$fGenericDay_$cfrom
                  Datatypes.$fFromJSONDay_$cto -}
ad58660113478d00359ba2ff2cfc4dc2
  $fGenericDay1 ::
    Datatypes.Day
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Day" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "day")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "start")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "end")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Datatypes.Day) ->
                 case x1 of wild { Datatypes.Day g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "day")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "start")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "end")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <Datatypes.DayOfWeek>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "day")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "start")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "end")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "start")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "end")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Day" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "day")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "start")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "end")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Types.Int))>_R) <x>_N) }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fGenericDayOfWeek :: GHC.Generics.Generic Datatypes.DayOfWeek
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.DayOfWeek
                  Datatypes.$fGenericDayOfWeek_$cfrom
                  Datatypes.$fFromJSONDayOfWeek_$cto -}
16c043eeea3e74307b3fcc3c3668b61a
  $fGenericDayOfWeek1 ::
    Datatypes.DayOfWeek
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Datatypes.DayOfWeek) ->
                 case x1 of wild {
                   Datatypes.Mo -> Datatypes.$fGenericDayOfWeek12 @ x
                   Datatypes.Tu -> Datatypes.$fGenericDayOfWeek10 @ x
                   Datatypes.We -> Datatypes.$fGenericDayOfWeek8 @ x
                   Datatypes.Th -> Datatypes.$fGenericDayOfWeek5 @ x
                   Datatypes.Fr -> Datatypes.$fGenericDayOfWeek2 @ x }) -}
f8505a6733e9ebe63ca9a014494f1c5a
  $fGenericDayOfWeek10 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Fr"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Datatypes.$fGenericDayOfWeek11 @ x)) -}
a14445c0b1127f97a94805ccb5a58dfd
  $fGenericDayOfWeek11 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
666bf19bb71a119aba2292fabcc9a8cb
  $fGenericDayOfWeek12 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Fr"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Datatypes.$fGenericDayOfWeek13 @ x)) -}
e7a52bf3fc82849b72cfe577a275d05f
  $fGenericDayOfWeek13 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
fa56591b75cc81f9c0baaeec26dc2996
  $fGenericDayOfWeek2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Fr"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Datatypes.$fGenericDayOfWeek3 @ x)) -}
551032d67d3713c6285124455bcc8242
  $fGenericDayOfWeek3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Datatypes.$fGenericDayOfWeek4 @ x)) -}
952fd19ccfc1c142480f10cb24c9da14
  $fGenericDayOfWeek4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
5f1ed31fee1f536274e766412dfb493d
  $fGenericDayOfWeek5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Fr"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Datatypes.$fGenericDayOfWeek6 @ x)) -}
c04d8fb375c47e73461bbda57b00f2f9
  $fGenericDayOfWeek6 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Datatypes.$fGenericDayOfWeek7 @ x)) -}
47780a554813a01f9054779174c373b6
  $fGenericDayOfWeek7 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Th" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
9b14de97d9f4138406f8c84f5aec118b
  $fGenericDayOfWeek8 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Fr"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ x
                   (Datatypes.$fGenericDayOfWeek9 @ x)) -}
672cf3ce6809b71c0519c41029f3d254
  $fGenericDayOfWeek9 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "We" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fGenericDayOfWeek_$cfrom ::
    Datatypes.DayOfWeek -> GHC.Generics.Rep Datatypes.DayOfWeek x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fGenericDayOfWeek1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Datatypes.DayOfWeek>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "DayOfWeek"
                                       "Datatypes"
                                       "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                       'GHC.Types.False>_P
                                    <(GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                      GHC.Generics.:+: GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "Tu"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False)
                                                         GHC.Generics.U1)
                                     GHC.Generics.:+: (GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "We"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False)
                                                         GHC.Generics.U1
                                                       GHC.Generics.:+: (GHC.Generics.M1
                                                                           GHC.Generics.C
                                                                           ('GHC.Generics.MetaCons
                                                                              "Th"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1
                                                                         GHC.Generics.:+: GHC.Generics.M1
                                                                                            GHC.Generics.C
                                                                                            ('GHC.Generics.MetaCons
                                                                                               "Fr"
                                                                                               'GHC.Generics.PrefixI
                                                                                               'GHC.Types.False)
                                                                                            GHC.Generics.U1))>_R))
                          (Sub (Sym (Datatypes.Rep_DayOfWeek[0]))) <x>_N) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fGenericDay_$cfrom ::
    Datatypes.Day -> GHC.Generics.Rep Datatypes.Day x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fGenericDay1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Datatypes.Day>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Day"
                                       "Datatypes"
                                       "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Day" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "day")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Datatypes.DayOfWeek)
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "start")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Int)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "end")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                GHC.Types.Int)))>_R))
                          (Sub (Sym (Datatypes.Rep_Day[0]))) <x>_N) -}
877615fc906ccaad066e29ffd79dc9be
  $fGenericEverything :: GHC.Generics.Generic Datatypes.Everything
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Everything
                  Datatypes.$fGenericEverything_$cfrom
                  Datatypes.$fGenericEverything_$cto -}
877615fc906ccaad066e29ffd79dc9be
  $fGenericEverything1 ::
    GHC.Generics.Rep Datatypes.Everything x
    -> GHC.Generics.Rep Datatypes.Everything x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ x (ds :: GHC.Generics.Rep Datatypes.Everything x) -> ds) -}
877615fc906ccaad066e29ffd79dc9be
  $fGenericEverything2 ::
    Datatypes.Everything -> Datatypes.Everything
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ x (x1 :: Datatypes.Everything) -> x1) -}
877615fc906ccaad066e29ffd79dc9be
  $fGenericEverything_$cfrom ::
    Datatypes.Everything -> GHC.Generics.Rep Datatypes.Everything x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fGenericEverything2
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Datatypes.Everything>_R
                 ->_R Trans
                          (Datatypes.N:Everything[0])
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <[Datatypes.FullCourse]>_R <x>_P))
                               (Trans
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "courses")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R [Datatypes.FullCourse]>_R))
                                    (Trans
                                         (Sym (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.C>_P
                                                   <'GHC.Generics.MetaCons
                                                      "Everything"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.True>_P
                                                   <GHC.Generics.M1
                                                      GHC.Generics.S
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "courses")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.K1
                                                         GHC.Generics.R [Datatypes.FullCourse])>_R))
                                         (Trans
                                              (Sym (GHC.Generics.N:M1[0]
                                                        <GHC.Generics.D>_P
                                                        <'GHC.Generics.MetaData
                                                           "Everything"
                                                           "Datatypes"
                                                           "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                                           'GHC.Types.True>_P
                                                        <GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Everything"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.True)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "courses")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 [Datatypes.FullCourse]))>_R))
                                              (Sub (Sym (Datatypes.Rep_Everything[0]))))) <x>_N))) -}
877615fc906ccaad066e29ffd79dc9be
  $fGenericEverything_$cto ::
    GHC.Generics.Rep Datatypes.Everything x -> Datatypes.Everything
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fGenericEverything1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <GHC.Generics.Rep Datatypes.Everything x>_R
                 ->_R Trans
                          (Trans
                               (Sub (Datatypes.Rep_Everything[0]))
                               (Trans
                                    (GHC.Generics.N:M1[0]
                                         <GHC.Generics.D>_P
                                         <'GHC.Generics.MetaData
                                            "Everything"
                                            "Datatypes"
                                            "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                            'GHC.Types.True>_P
                                         <GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Everything" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "courses")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R [Datatypes.FullCourse]))>_R)
                                    (Trans
                                         (GHC.Generics.N:M1[0]
                                              <GHC.Generics.C>_P
                                              <'GHC.Generics.MetaCons
                                                 "Everything"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.True>_P
                                              <GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "courses")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R [Datatypes.FullCourse])>_R)
                                         (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "courses")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R [Datatypes.FullCourse]>_R))) <x>_N)
                          (Trans
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <[Datatypes.FullCourse]>_R <x>_P)
                               (Sym (Datatypes.N:Everything[0])))) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fGenericFullCourse :: GHC.Generics.Generic Datatypes.FullCourse
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.FullCourse
                  Datatypes.$fGenericFullCourse_$cfrom
                  Datatypes.$fFromJSONFullCourse_$cto -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fGenericFullCourse1 ::
    Datatypes.FullCourse
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "courseTitle")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "courseNum")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "sections")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R [Datatypes.Section])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Datatypes.FullCourse) ->
                 case x1 of wild { Datatypes.FullCourse g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "courseTitle")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "courseNum")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "sections")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [Datatypes.Section]))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "courseTitle")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "courseNum")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "sections")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Datatypes.Section]))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "courseNum")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <[Datatypes.Section]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "sections")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R [Datatypes.Section]>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "courseTitle")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "courseNum")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "sections")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [Datatypes.Section]))>_R) <x>_N) }) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fGenericFullCourse_$cfrom ::
    Datatypes.FullCourse -> GHC.Generics.Rep Datatypes.FullCourse x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fGenericFullCourse1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Datatypes.FullCourse>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "FullCourse"
                                       "Datatypes"
                                       "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "courseTitle")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "courseNum")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "sections")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                [Datatypes.Section])))>_R))
                          (Sub (Sym (Datatypes.Rep_FullCourse[0]))) <x>_N) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fGenericSection :: GHC.Generics.Generic Datatypes.Section
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Section
                  Datatypes.$fGenericSection_$cfrom
                  Datatypes.$fFromJSONSection_$cto -}
ad58660113478d00359ba2ff2cfc4dc2
  $fGenericSection1 ::
    Datatypes.Section
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Section" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "instructor")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "sectionNum")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "schedules")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Datatypes.Day])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Datatypes.Section) ->
                 case x1 of wild { Datatypes.Section g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "instructor")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "sectionNum")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "schedules")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [Datatypes.Day]))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "instructor")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "sectionNum")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "schedules")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Datatypes.Day]))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "sectionNum")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <[Datatypes.Day]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "schedules")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R [Datatypes.Day]>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Section" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "instructor")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "sectionNum")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "schedules")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [Datatypes.Day]))>_R) <x>_N) }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fGenericSection_$cfrom ::
    Datatypes.Section -> GHC.Generics.Rep Datatypes.Section x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fGenericSection1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Datatypes.Section>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Section"
                                       "Datatypes"
                                       "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Section" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "instructor")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "sectionNum")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "schedules")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                [Datatypes.Day])))>_R))
                          (Sub (Sym (Datatypes.Rep_Section[0]))) <x>_N) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fOrdDayOfWeek :: GHC.Classes.Ord Datatypes.DayOfWeek
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.DayOfWeek
                  Datatypes.$fEqDayOfWeek
                  Datatypes.$fOrdDayOfWeek_$ccompare
                  Datatypes.$fOrdDayOfWeek_$c<
                  Datatypes.$fOrdDayOfWeek_$c<=
                  Datatypes.$fOrdDayOfWeek_$c>
                  Datatypes.$fOrdDayOfWeek_$c>=
                  Datatypes.$fOrdDayOfWeek_$cmax
                  Datatypes.$fOrdDayOfWeek_$cmin -}
16c043eeea3e74307b3fcc3c3668b61a
  $fOrdDayOfWeek_$c< ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Datatypes.DayOfWeek)
                   (b :: Datatypes.DayOfWeek) ->
                 case a of wild {
                   Datatypes.Mo
                   -> case b of wild1 {
                        Datatypes.Mo -> GHC.Types.False
                        Datatypes.Tu -> GHC.Types.True
                        Datatypes.We -> GHC.Types.True
                        Datatypes.Th -> GHC.Types.True
                        Datatypes.Fr -> GHC.Types.True }
                   Datatypes.Tu
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Datatypes.We -> GHC.Types.True
                        Datatypes.Th -> GHC.Types.True
                        Datatypes.Fr -> GHC.Types.True }
                   Datatypes.We
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Datatypes.Th -> GHC.Types.True
                        Datatypes.Fr -> GHC.Types.True }
                   Datatypes.Th
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False Datatypes.Fr -> GHC.Types.True }
                   Datatypes.Fr
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fOrdDayOfWeek_$c<= ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Datatypes.DayOfWeek)
                   (b :: Datatypes.DayOfWeek) ->
                 case a of wild {
                   Datatypes.Mo -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Datatypes.Tu
                   -> case b of wild1 {
                        Datatypes.Mo -> GHC.Types.False
                        Datatypes.Tu -> GHC.Types.True
                        Datatypes.We -> GHC.Types.True
                        Datatypes.Th -> GHC.Types.True
                        Datatypes.Fr -> GHC.Types.True }
                   Datatypes.We
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Datatypes.We -> GHC.Types.True
                        Datatypes.Th -> GHC.Types.True
                        Datatypes.Fr -> GHC.Types.True }
                   Datatypes.Th
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Datatypes.Th -> GHC.Types.True
                        Datatypes.Fr -> GHC.Types.True }
                   Datatypes.Fr
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False Datatypes.Fr -> GHC.Types.True } }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fOrdDayOfWeek_$c> ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Datatypes.DayOfWeek)
                   (b :: Datatypes.DayOfWeek) ->
                 case a of wild {
                   Datatypes.Mo -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Datatypes.Tu
                   -> case b of wild1 {
                        Datatypes.Mo -> GHC.Types.True
                        Datatypes.Tu -> GHC.Types.False
                        Datatypes.We -> GHC.Types.False
                        Datatypes.Th -> GHC.Types.False
                        Datatypes.Fr -> GHC.Types.False }
                   Datatypes.We
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Datatypes.We -> GHC.Types.False
                        Datatypes.Th -> GHC.Types.False
                        Datatypes.Fr -> GHC.Types.False }
                   Datatypes.Th
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Datatypes.Th -> GHC.Types.False
                        Datatypes.Fr -> GHC.Types.False }
                   Datatypes.Fr
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Datatypes.Fr -> GHC.Types.False } }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fOrdDayOfWeek_$c>= ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Datatypes.DayOfWeek)
                   (b :: Datatypes.DayOfWeek) ->
                 case a of wild {
                   Datatypes.Mo
                   -> case b of wild1 {
                        Datatypes.Mo -> GHC.Types.True
                        Datatypes.Tu -> GHC.Types.False
                        Datatypes.We -> GHC.Types.False
                        Datatypes.Th -> GHC.Types.False
                        Datatypes.Fr -> GHC.Types.False }
                   Datatypes.Tu
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Datatypes.We -> GHC.Types.False
                        Datatypes.Th -> GHC.Types.False
                        Datatypes.Fr -> GHC.Types.False }
                   Datatypes.We
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Datatypes.Th -> GHC.Types.False
                        Datatypes.Fr -> GHC.Types.False }
                   Datatypes.Th
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Datatypes.Fr -> GHC.Types.False }
                   Datatypes.Fr -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fOrdDayOfWeek_$ccompare ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Datatypes.DayOfWeek)
                   (b :: Datatypes.DayOfWeek) ->
                 case a of wild {
                   Datatypes.Mo
                   -> case b of wild1 {
                        Datatypes.Mo -> GHC.Types.EQ
                        Datatypes.Tu -> GHC.Types.LT
                        Datatypes.We -> GHC.Types.LT
                        Datatypes.Th -> GHC.Types.LT
                        Datatypes.Fr -> GHC.Types.LT }
                   Datatypes.Tu
                   -> case b of wild1 {
                        Datatypes.Mo -> GHC.Types.GT
                        Datatypes.Tu -> GHC.Types.EQ
                        Datatypes.We -> GHC.Types.LT
                        Datatypes.Th -> GHC.Types.LT
                        Datatypes.Fr -> GHC.Types.LT }
                   Datatypes.We
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Datatypes.We -> GHC.Types.EQ
                        Datatypes.Th -> GHC.Types.LT
                        Datatypes.Fr -> GHC.Types.LT }
                   Datatypes.Th
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Datatypes.Th -> GHC.Types.EQ
                        Datatypes.Fr -> GHC.Types.LT }
                   Datatypes.Fr
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT Datatypes.Fr -> GHC.Types.EQ } }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fOrdDayOfWeek_$cmax ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> Datatypes.DayOfWeek
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Datatypes.DayOfWeek)
                   (y :: Datatypes.DayOfWeek) ->
                 case x of wild {
                   Datatypes.Mo -> y
                   Datatypes.Tu
                   -> case y of wild1 {
                        DEFAULT -> Datatypes.Tu
                        Datatypes.We -> Datatypes.We
                        Datatypes.Th -> Datatypes.Th
                        Datatypes.Fr -> Datatypes.Fr }
                   Datatypes.We
                   -> case y of wild1 {
                        DEFAULT -> Datatypes.We
                        Datatypes.Th -> Datatypes.Th
                        Datatypes.Fr -> Datatypes.Fr }
                   Datatypes.Th
                   -> case y of wild1 {
                        DEFAULT -> Datatypes.Th Datatypes.Fr -> Datatypes.Fr }
                   Datatypes.Fr -> case y of wild1 { DEFAULT -> Datatypes.Fr } }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fOrdDayOfWeek_$cmin ::
    Datatypes.DayOfWeek -> Datatypes.DayOfWeek -> Datatypes.DayOfWeek
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Datatypes.DayOfWeek)
                   (y :: Datatypes.DayOfWeek) ->
                 case x of wild {
                   Datatypes.Mo -> case y of wild1 { DEFAULT -> Datatypes.Mo }
                   Datatypes.Tu
                   -> case y of wild1 {
                        Datatypes.Mo -> Datatypes.Mo
                        Datatypes.Tu -> Datatypes.Tu
                        Datatypes.We -> Datatypes.Tu
                        Datatypes.Th -> Datatypes.Tu
                        Datatypes.Fr -> Datatypes.Tu }
                   Datatypes.We
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Datatypes.We -> Datatypes.We
                        Datatypes.Th -> Datatypes.We
                        Datatypes.Fr -> Datatypes.We }
                   Datatypes.Th
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Datatypes.Th -> Datatypes.Th
                        Datatypes.Fr -> Datatypes.Th }
                   Datatypes.Fr -> y }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowDay :: GHC.Show.Show Datatypes.Day
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Day
                  Datatypes.$fShowDay_$cshowsPrec
                  Datatypes.$fShowDay_$cshow
                  Datatypes.$fShowDay_$cshowList -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowDay1 :: Datatypes.Day -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Datatypes.Day)
                   (s :: GHC.Base.String)[OneShot] ->
                 case x of ww { Datatypes.Day ww1 ww2 ww3 ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Datatypes.$w$cshow ww1 ww2 ww3)
                   s }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fShowDayOfWeek :: GHC.Show.Show Datatypes.DayOfWeek
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.DayOfWeek
                  Datatypes.$fShowDayOfWeek_$cshowsPrec
                  Datatypes.$fShowDayOfWeek_$cshow
                  Datatypes.$fShowDayOfWeek_$cshowList -}
16c043eeea3e74307b3fcc3c3668b61a
  $fShowDayOfWeek_$cshow :: Datatypes.DayOfWeek -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Datatypes.DayOfWeek) ->
                 Datatypes.$fShowDayOfWeek_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fShowDayOfWeek_$cshowList ::
    [Datatypes.DayOfWeek] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Datatypes.DayOfWeek
                   Datatypes.$w$cshowsPrec) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fShowDayOfWeek_$cshowsPrec ::
    GHC.Types.Int -> Datatypes.DayOfWeek -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Datatypes.DayOfWeek)
                   (w2 :: GHC.Base.String) ->
                 Datatypes.$w$cshowsPrec w1 w2) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowDay_$cshow :: Datatypes.Day -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SLL),1*U(1*U,1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datatypes.Day) ->
                 case w of ww { Datatypes.Day ww1 ww2 ww3 ->
                 Datatypes.$w$cshow ww1 ww2 ww3 }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowDay_$cshowList :: [Datatypes.Day] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Datatypes.Day]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Datatypes.Day Datatypes.$fShowDay1 ls s) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowDay_$cshowsPrec ::
    GHC.Types.Int -> Datatypes.Day -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,A><S(SLL),1*U(1*U,1*U(U),1*U(U))><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Datatypes.Day)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c1
                      n
                      (Datatypes.$fShowDay_$cshow x))
                   s) -}
877615fc906ccaad066e29ffd79dc9be
  $fShowEverything :: GHC.Show.Show Datatypes.Everything
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Everything
                  Datatypes.$fShowEverything_$cshowsPrec
                  Datatypes.$fShowEverything_$cshow1
                  Datatypes.$fShowEverything_$cshowList -}
877615fc906ccaad066e29ffd79dc9be
  $fShowEverything1 :: Datatypes.Everything -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Datatypes.Everything)
                   (w1 :: GHC.Base.String) ->
                 Datatypes.$w$cshowsPrec1 0# w w1) -}
65406fa6e1960dee364a206eeed5508a
  $fShowEverything2 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6a66e2c3d9735e0d36b95ba82cf4e32b
  $fShowEverything3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
0971256307bb5fc0f5a461d37127a6cd
  $fShowEverything4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "courses = "#) -}
ac9635669f2df75fbdd9d81393e61bb7
  $fShowEverything5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Everything {"#) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowEverything_$cshow :: Datatypes.Section -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datatypes.Section) ->
                 case w of ww { Datatypes.Section ww1 ww2 ww3 ->
                 Datatypes.$w$cshow2 ww1 ww2 ww3 }) -}
877615fc906ccaad066e29ffd79dc9be
  $fShowEverything_$cshow1 :: Datatypes.Everything -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Datatypes.Everything) ->
                 Datatypes.$fShowEverything_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
877615fc906ccaad066e29ffd79dc9be
  $fShowEverything_$cshowList ::
    [Datatypes.Everything] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Datatypes.Everything
                   Datatypes.$fShowEverything1) -}
877615fc906ccaad066e29ffd79dc9be
  $fShowEverything_$cshowsPrec ::
    GHC.Types.Int -> Datatypes.Everything -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Datatypes.Everything)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Datatypes.$w$cshowsPrec1 ww1 w1 w2 }) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fShowFullCourse :: GHC.Show.Show Datatypes.FullCourse
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.FullCourse
                  Datatypes.$fShowFullCourse_$cshowsPrec
                  Datatypes.$fShowFullCourse_$cshow
                  Datatypes.$fShowFullCourse_$cshowList -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fShowFullCourse1 ::
    Datatypes.FullCourse -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Datatypes.FullCourse)
                   (s :: GHC.Base.String)[OneShot] ->
                 case x of ww { Datatypes.FullCourse ww1 ww2 ww3 ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Datatypes.$w$cshow1 ww1 ww2 ww3)
                   s }) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fShowFullCourse_$cshow :: Datatypes.FullCourse -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datatypes.FullCourse) ->
                 case w of ww { Datatypes.FullCourse ww1 ww2 ww3 ->
                 Datatypes.$w$cshow1 ww1 ww2 ww3 }) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fShowFullCourse_$cshowList ::
    [Datatypes.FullCourse] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Datatypes.FullCourse])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Datatypes.FullCourse
                   Datatypes.$fShowFullCourse1
                   ls
                   s) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fShowFullCourse_$cshowsPrec ::
    GHC.Types.Int -> Datatypes.FullCourse -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U(1*U,1*U,1*U)><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Datatypes.FullCourse)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c1
                      n
                      (Datatypes.$fShowFullCourse_$cshow x))
                   s) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowSection :: GHC.Show.Show Datatypes.Section
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Section
                  Datatypes.$fShowSection_$cshowsPrec
                  Datatypes.$fShowEverything_$cshow
                  Datatypes.$fShowSection_$cshowList -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowSection1 ::
    Datatypes.Section -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Datatypes.Section)
                   (s :: GHC.Base.String)[OneShot] ->
                 case x of ww { Datatypes.Section ww1 ww2 ww3 ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Datatypes.$w$cshow2 ww1 ww2 ww3)
                   s }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowSection_$cshowList :: [Datatypes.Section] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Datatypes.Section]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Datatypes.Section
                   Datatypes.$fShowSection1
                   ls
                   s) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fShowSection_$cshowsPrec ::
    GHC.Types.Int -> Datatypes.Section -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U(1*U,1*U,1*U)><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Datatypes.Section)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c1
                      n
                      (Datatypes.$fShowEverything_$cshow x))
                   s) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONDay :: Data.Aeson.Types.ToJSON.ToJSON Datatypes.Day
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Day
                  Datatypes.$fToJSONDay_$ctoJSON
                  Datatypes.$fToJSONDay_$ctoEncoding
                  Datatypes.$fToJSONDay_$ctoJSONList
                  Datatypes.$fToJSONDay_$ctoEncodingList -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONDay1 ::
    Datatypes.Day
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U),1*U(U))>m1,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datatypes.Day) ->
                 case w of ww { Datatypes.Day ww1 ww2 ww3 ->
                 case Datatypes.$w$dRecordToPairs
                        @ GHC.Prim.Any
                        (Data.Aeson.Types.Internal.Options
                           (GHC.Base.id @ GHC.Base.String)
                           (GHC.Base.id @ GHC.Base.String)
                           GHC.Types.True
                           GHC.Types.False
                           Data.Aeson.Types.Internal.defaultTaggedObject
                           GHC.Types.False)
                        ww1
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P <Datatypes.DayOfWeek>_R <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "day")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R Datatypes.DayOfWeek>_R) <GHC.Prim.Any>_N))
                        (GHC.Generics.:*:
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "start")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "end")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                           @ GHC.Prim.Any
                           ww2
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "start")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Types.Int>_R) <GHC.Prim.Any>_N))
                           ww3
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "end")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Types.Int>_R) <GHC.Prim.Any>_N)))
                        (GHC.Types.[]
                           @ Data.Aeson.Types.Internal.Pair) of ww4 { (#,#) ww5 ww6 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.: @ Data.Aeson.Types.Internal.Pair ww5 ww6)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (Data.Aeson.Types.Internal.Object dt1)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } } }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fToJSONDayOfWeek ::
    Data.Aeson.Types.ToJSON.ToJSON Datatypes.DayOfWeek
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.DayOfWeek
                  Datatypes.$fToJSONDayOfWeek_$ctoJSON
                  Datatypes.$fToJSONDayOfWeek_$ctoEncoding
                  Datatypes.$fToJSONDayOfWeek_$ctoJSONList
                  Datatypes.$fToJSONDayOfWeek_$ctoEncodingList -}
16c043eeea3e74307b3fcc3c3668b61a
  $fToJSONDayOfWeek1 ::
    Datatypes.DayOfWeek
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Datatypes.DayOfWeek) ->
                 case x of wild {
                   Datatypes.Mo
                   -> Datatypes.$fToJSONDayOfWeek_g
                        (Datatypes.$fGenericDayOfWeek12 @ GHC.Prim.Any)
                   Datatypes.Tu
                   -> Datatypes.$fToJSONDayOfWeek_g
                        (Datatypes.$fGenericDayOfWeek10 @ GHC.Prim.Any)
                   Datatypes.We
                   -> Datatypes.$fToJSONDayOfWeek_g
                        (Datatypes.$fGenericDayOfWeek8 @ GHC.Prim.Any)
                   Datatypes.Th
                   -> Datatypes.$fToJSONDayOfWeek_g
                        (Datatypes.$fGenericDayOfWeek5 @ GHC.Prim.Any)
                   Datatypes.Fr
                   -> Datatypes.$fToJSONDayOfWeek_g
                        (Datatypes.$fGenericDayOfWeek2 @ GHC.Prim.Any) }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fToJSONDayOfWeek_$ctoEncoding ::
    Datatypes.DayOfWeek -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Datatypes.DayOfWeek) ->
                 Data.Aeson.Encoding.Internal.value
                   (Datatypes.$fToJSONDayOfWeek_$ctoJSON eta)) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fToJSONDayOfWeek_$ctoEncodingList ::
    [Datatypes.DayOfWeek] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.DayOfWeek]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Datatypes.$fToJSONDayOfWeek_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Datatypes.DayOfWeek
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Datatypes.DayOfWeek)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Datatypes.$fToJSONDayOfWeek_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Datatypes.DayOfWeek>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fToJSONDayOfWeek_$ctoJSON ::
    Datatypes.DayOfWeek -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fToJSONDayOfWeek1
                  `cast`
                (<Datatypes.DayOfWeek>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
16c043eeea3e74307b3fcc3c3668b61a
  $fToJSONDayOfWeek_$ctoJSONList ::
    [Datatypes.DayOfWeek] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.DayOfWeek]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c1 :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Datatypes.DayOfWeek
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Datatypes.DayOfWeek
                                       c1
                                       Datatypes.$fToJSONDayOfWeek_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
c567b7a1c33c614ec7a6163ba042964f
  $fToJSONDayOfWeek_g ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      GHC.Prim.Any
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Generics.:+:)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: (GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1
                                              GHC.Generics.:+: GHC.Generics.C1
                                                                 ('GHC.Generics.MetaCons
                                                                    "Fr"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1))
                           GHC.Prim.Any) ->
                 case Datatypes.$wg w of ww { Unit# ww1 ->
                 (Data.Aeson.Types.Internal.String ww1)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONDay_$ctoEncoding ::
    Datatypes.Day -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U),1*U(U))>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Datatypes.Day) ->
                 Data.Aeson.Encoding.Internal.value
                   (Datatypes.$fToJSONDay_$ctoJSON eta)) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONDay_$ctoEncodingList ::
    [Datatypes.Day] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.Day]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Datatypes.$fToJSONDay_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Datatypes.Day
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Datatypes.Day)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Datatypes.$fToJSONDay_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Datatypes.Day>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONDay_$ctoJSON ::
    Datatypes.Day -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U),1*U(U))>m1,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fToJSONDay1
                  `cast`
                (<Datatypes.Day>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONDay_$ctoJSONList ::
    [Datatypes.Day] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.Day]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c1 :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Datatypes.Day
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Datatypes.Day
                                       c1
                                       Datatypes.$fToJSONDay_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
877615fc906ccaad066e29ffd79dc9be
  $fToJSONEverything ::
    Data.Aeson.Types.ToJSON.ToJSON Datatypes.Everything
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Everything
                  Datatypes.$fToJSONEverything_$ctoJSON
                  Datatypes.$fToJSONEverything_$ctoEncoding
                  Datatypes.$fToJSONEverything_$ctoJSONList
                  Datatypes.$fToJSONEverything_$ctoEncodingList -}
877615fc906ccaad066e29ffd79dc9be
  $fToJSONEverything1 ::
    Datatypes.Everything
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datatypes.Everything) ->
                 case Datatypes.$w$dRecordToPairs1
                        @ GHC.Prim.Any
                        (Data.Aeson.Types.Internal.Options
                           (GHC.Base.id @ GHC.Base.String)
                           (GHC.Base.id @ GHC.Base.String)
                           GHC.Types.True
                           GHC.Types.False
                           Data.Aeson.Types.Internal.defaultTaggedObject
                           GHC.Types.False)
                        w `cast`
                        (Trans
                             (Datatypes.N:Everything[0])
                             (Trans
                                  (Sym (GHC.Generics.N:K1[0]
                                            <GHC.Generics.R>_P
                                            <[Datatypes.FullCourse]>_R
                                            <GHC.Prim.Any>_P))
                                  (Sym (GHC.Generics.N:M1[0]
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "courses")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R
                                               [Datatypes.FullCourse]>_R) <GHC.Prim.Any>_N)))
                        (GHC.Types.[]
                           @ Data.Aeson.Types.Internal.Pair) of ww { (#,#) ww1 ww2 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           ww1
                           ww2)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (Data.Aeson.Types.Internal.Object dt1)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fToJSONEverything2 ::
    Datatypes.FullCourse
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datatypes.FullCourse) ->
                 case w of ww { Datatypes.FullCourse ww1 ww2 ww3 ->
                 case Datatypes.$w$dRecordToPairs2
                        @ GHC.Prim.Any
                        (Data.Aeson.Types.Internal.Options
                           (GHC.Base.id @ GHC.Base.String)
                           (GHC.Base.id @ GHC.Base.String)
                           GHC.Types.True
                           GHC.Types.False
                           Data.Aeson.Types.Internal.defaultTaggedObject
                           GHC.Types.False)
                        ww1
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "courseTitle")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                        (GHC.Generics.:*:
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "courseNum")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "sections")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R [Datatypes.Section]))
                           @ GHC.Prim.Any
                           ww2
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "courseNum")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                           ww3
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P
                                          <[Datatypes.Section]>_R
                                          <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "sections")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R
                                             [Datatypes.Section]>_R) <GHC.Prim.Any>_N)))
                        (GHC.Types.[]
                           @ Data.Aeson.Types.Internal.Pair) of ww4 { (#,#) ww5 ww6 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.: @ Data.Aeson.Types.Internal.Pair ww5 ww6)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (Data.Aeson.Types.Internal.Object dt1)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } } }) -}
efd4c223b33dbc77a3281fe8288d6a02
  $fToJSONEverything3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
f34c7f7ec9289eb548e00b7390179e31
  $fToJSONEverything4 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
877615fc906ccaad066e29ffd79dc9be
  $fToJSONEverything_$ctoEncoding ::
    Datatypes.Everything -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <L,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Datatypes.Everything) ->
                 Data.Aeson.Encoding.Internal.value
                   (Datatypes.$fToJSONEverything_$ctoJSON eta)) -}
877615fc906ccaad066e29ffd79dc9be
  $fToJSONEverything_$ctoEncodingList ::
    [Datatypes.Everything] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.Everything]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Datatypes.$fToJSONEverything_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Datatypes.Everything
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Datatypes.Everything)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Datatypes.$fToJSONEverything_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Datatypes.Everything>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
877615fc906ccaad066e29ffd79dc9be
  $fToJSONEverything_$ctoJSON ::
    Datatypes.Everything -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U>m1,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fToJSONEverything1
                  `cast`
                (<Datatypes.Everything>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
877615fc906ccaad066e29ffd79dc9be
  $fToJSONEverything_$ctoJSONList ::
    [Datatypes.Everything] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.Everything]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c1 :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Datatypes.Everything
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Datatypes.Everything
                                       c1
                                       Datatypes.$fToJSONEverything_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fToJSONFullCourse ::
    Data.Aeson.Types.ToJSON.ToJSON Datatypes.FullCourse
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.FullCourse
                  Datatypes.$fToJSONFullCourse_$ctoJSON
                  Datatypes.$fToJSONFullCourse_$ctoEncoding
                  Datatypes.$fToJSONFullCourse_$ctoJSONList
                  Datatypes.$fToJSONFullCourse_$ctoEncodingList -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fToJSONFullCourse_$ctoEncoding ::
    Datatypes.FullCourse -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Datatypes.FullCourse) ->
                 Data.Aeson.Encoding.Internal.value
                   (Datatypes.$fToJSONFullCourse_$ctoJSON eta)) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fToJSONFullCourse_$ctoEncodingList ::
    [Datatypes.FullCourse] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.FullCourse]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Datatypes.$fToJSONFullCourse_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Datatypes.FullCourse
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Datatypes.FullCourse)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Datatypes.$fToJSONFullCourse_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Datatypes.FullCourse>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fToJSONFullCourse_$ctoJSON ::
    Datatypes.FullCourse -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fToJSONEverything2
                  `cast`
                (<Datatypes.FullCourse>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
58cb5799dc36d56d62c8e8a1f5bf1204
  $fToJSONFullCourse_$ctoJSONList ::
    [Datatypes.FullCourse] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.FullCourse]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c1 :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Datatypes.FullCourse
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Datatypes.FullCourse
                                       c1
                                       Datatypes.$fToJSONFullCourse_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONSection :: Data.Aeson.Types.ToJSON.ToJSON Datatypes.Section
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datatypes.Section
                  Datatypes.$fToJSONSection_$ctoJSON
                  Datatypes.$fToJSONSection_$ctoEncoding
                  Datatypes.$fToJSONSection_$ctoJSONList
                  Datatypes.$fToJSONSection_$ctoEncodingList -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONSection1 ::
    Datatypes.Section
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datatypes.Section) ->
                 case w of ww { Datatypes.Section ww1 ww2 ww3 ->
                 case Datatypes.$w$dRecordToPairs3
                        @ GHC.Prim.Any
                        (Data.Aeson.Types.Internal.Options
                           (GHC.Base.id @ GHC.Base.String)
                           (GHC.Base.id @ GHC.Base.String)
                           GHC.Types.True
                           GHC.Types.False
                           Data.Aeson.Types.Internal.defaultTaggedObject
                           GHC.Types.False)
                        ww1
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "instructor")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                        (GHC.Generics.:*:
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "sectionNum")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "schedules")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R [Datatypes.Day]))
                           @ GHC.Prim.Any
                           ww2
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "sectionNum")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                           ww3
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <[Datatypes.Day]>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "schedules")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R [Datatypes.Day]>_R) <GHC.Prim.Any>_N)))
                        (GHC.Types.[]
                           @ Data.Aeson.Types.Internal.Pair) of ww4 { (#,#) ww5 ww6 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.: @ Data.Aeson.Types.Internal.Pair ww5 ww6)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (Data.Aeson.Types.Internal.Object dt1)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } } }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONSection_$ctoEncoding ::
    Datatypes.Section -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Datatypes.Section) ->
                 Data.Aeson.Encoding.Internal.value
                   (Datatypes.$fToJSONSection_$ctoJSON eta)) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONSection_$ctoEncodingList ::
    [Datatypes.Section] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.Section]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Datatypes.$fToJSONSection_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Datatypes.Section
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Datatypes.Section)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Datatypes.$fToJSONSection_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Datatypes.Section>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONSection_$ctoJSON ::
    Datatypes.Section -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$fToJSONSection1
                  `cast`
                (<Datatypes.Section>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
ad58660113478d00359ba2ff2cfc4dc2
  $fToJSONSection_$ctoJSONList ::
    [Datatypes.Section] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datatypes.Section]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c1 :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Datatypes.Section
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Datatypes.Section
                                       c1
                                       Datatypes.$fToJSONSection_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
9aec14fe189ff0cc06c96a6011959030
  $sel:courseNum:FullCourse ::
    Datatypes.FullCourse -> GHC.Base.String
  RecSel Left Datatypes.FullCourse
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datatypes.FullCourse) ->
                 case ds of wild { Datatypes.FullCourse ds1 ds2 ds3 -> ds2 }) -}
fa9a38466106cd6244fa03223ebf177f
  $sel:courseTitle:FullCourse ::
    Datatypes.FullCourse -> GHC.Base.String
  RecSel Left Datatypes.FullCourse
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datatypes.FullCourse) ->
                 case ds of wild { Datatypes.FullCourse ds1 ds2 ds3 -> ds1 }) -}
83125f0d5c83147f5c26db1645a90b6a
  $sel:courses:Everything ::
    Datatypes.Everything -> [Datatypes.FullCourse]
  RecSel Left Datatypes.Everything
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Datatypes.$sel:courses:Everything1
                  `cast`
                (<Datatypes.Everything>_R ->_R Datatypes.N:Everything[0]) -}
a7b518177db3bcf4838d441e6c59a45e
  $sel:courses:Everything1 ::
    Datatypes.Everything -> Datatypes.Everything
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Datatypes.Everything) -> ds) -}
e672ef073f828bb3876f14c8b1acc497
  $sel:day:Day :: Datatypes.Day -> Datatypes.DayOfWeek
  RecSel Left Datatypes.Day
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datatypes.Day) ->
                 case ds of wild { Datatypes.Day ds1 ds2 ds3 -> ds1 }) -}
bcd3ef9eb2c10cd5c5c75dc7d1e1daf4
  $sel:end:Day :: Datatypes.Day -> GHC.Types.Int
  RecSel Left Datatypes.Day
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datatypes.Day) ->
                 case ds of wild { Datatypes.Day ds1 ds2 ds3 -> ds3 }) -}
de757b89af52135e55c6f327d336d81f
  $sel:instructor:Section :: Datatypes.Section -> GHC.Base.String
  RecSel Left Datatypes.Section
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datatypes.Section) ->
                 case ds of wild { Datatypes.Section ds1 ds2 ds3 -> ds1 }) -}
aaf0fe21738824c311c6dde3f1d0aa19
  $sel:schedules:Section :: Datatypes.Section -> [Datatypes.Day]
  RecSel Left Datatypes.Section
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datatypes.Section) ->
                 case ds of wild { Datatypes.Section ds1 ds2 ds3 -> ds3 }) -}
d9129a83a346c0056351c340b8ce8c15
  $sel:sectionNum:Section :: Datatypes.Section -> GHC.Base.String
  RecSel Left Datatypes.Section
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datatypes.Section) ->
                 case ds of wild { Datatypes.Section ds1 ds2 ds3 -> ds2 }) -}
4dd724396e4c02e52806641e5f9ff7d0
  $sel:sections:FullCourse ::
    Datatypes.FullCourse -> [Datatypes.Section]
  RecSel Left Datatypes.FullCourse
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datatypes.FullCourse) ->
                 case ds of wild { Datatypes.FullCourse ds1 ds2 ds3 -> ds3 }) -}
00a6266b93d38207b10e93f49774a21e
  $sel:start:Day :: Datatypes.Day -> GHC.Types.Int
  RecSel Left Datatypes.Day
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datatypes.Day) ->
                 case ds of wild { Datatypes.Day ds1 ds2 ds3 -> ds2 }) -}
1bca25ecbd471b5b56a42adca73c79fc
  $tc'Day :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9926976485318614614##
                   1171873316516634552##
                   Datatypes.$trModule
                   Datatypes.$tc'Day1) -}
3598404d6dbd0c11d719a1190e37a908
  $tc'Day1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Day"#) -}
169338a5622e3bd05dc1a277dbe9a3bc
  $tc'Everything :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5667554102322658389##
                   17194444712057033882##
                   Datatypes.$trModule
                   Datatypes.$tc'Everything1) -}
66a91b9954023a237a42bd8e15336ece
  $tc'Everything1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Everything"#) -}
e8af8b5fa0f8ef5081cec42274c9cb79
  $tc'Fr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12075243516404337312##
                   1335011111997490793##
                   Datatypes.$trModule
                   Datatypes.$tc'Fr1) -}
4cfd9689fcdc72f8722a9270adb2bdc5
  $tc'Fr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Fr"#) -}
000521a5e0425e71e52a307fb5963bf4
  $tc'FullCourse :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9654600531135086498##
                   7409924288199659788##
                   Datatypes.$trModule
                   Datatypes.$tc'FullCourse1) -}
fbf2c21ef99922f2d49cf2fda279fef2
  $tc'FullCourse1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FullCourse"#) -}
f7be99131f080d715296d1c33bfead1b
  $tc'Mo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6037033266231430480##
                   5367759289686810061##
                   Datatypes.$trModule
                   Datatypes.$tc'Mo1) -}
257e2d870490011652f9d053f0764b97
  $tc'Mo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mo"#) -}
7d3fd6274766eb7a8615dd44ab5f5079
  $tc'Section :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7929955613542543373##
                   283233897417003009##
                   Datatypes.$trModule
                   Datatypes.$tc'Section1) -}
dcd36f985bd62e7ed124259475989acc
  $tc'Section1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Section"#) -}
1f36bbef8312951f2e8c82bb954d109e
  $tc'Th :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16875793426572650899##
                   17185051886709408288##
                   Datatypes.$trModule
                   Datatypes.$tc'Th1) -}
a8ddc74aa526b48b6eaa959859b73b98
  $tc'Th1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Th"#) -}
60d614687c1216f2baccda5794082882
  $tc'Tu :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6087370108741811485##
                   16902284021189389038##
                   Datatypes.$trModule
                   Datatypes.$tc'Tu1) -}
95cbf58d358e4b8d50a691b7043ddfd6
  $tc'Tu1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Tu"#) -}
8297cadb561c5269b318caccf0e9834d
  $tc'We :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9214062080593878845##
                   12794853879995625240##
                   Datatypes.$trModule
                   Datatypes.$tc'We1) -}
bf20770dbef6c4a7cdf5a90fe86572bf
  $tc'We1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'We"#) -}
47ed465a4a4de62a764c72122daef6a0
  $tcDay :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13641330587720022975##
                   14487148275290157##
                   Datatypes.$trModule
                   Datatypes.$tcDay1) -}
636204ed910a9afe368f366272d34c36
  $tcDay1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Day"#) -}
02b049d3cafb24d1f8cae0cb77356053
  $tcDayOfWeek :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   898122438043226809##
                   2554803374346547609##
                   Datatypes.$trModule
                   Datatypes.$tcDayOfWeek1) -}
d3d588532be4d91ae44eec2c71cb60c9
  $tcDayOfWeek1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DayOfWeek"#) -}
c1720f8ff7d10a5d4ce09340833c3d0b
  $tcEverything :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17290681551460142409##
                   14574081224404595481##
                   Datatypes.$trModule
                   Datatypes.$tcEverything1) -}
d67d5d0023fb3c50fb84595cbb9a566b
  $tcEverything1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Everything"#) -}
fa76bf83e0e1fb39b93d0335b695a126
  $tcFullCourse :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6894953577314687767##
                   9807910514936541562##
                   Datatypes.$trModule
                   Datatypes.$tcFullCourse1) -}
3032c8204d6e1e428d2e6605d2080bf3
  $tcFullCourse1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FullCourse"#) -}
c343166c4420e2d057eff3e81beb125a
  $tcSection :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15135619250685292490##
                   17852937972368241224##
                   Datatypes.$trModule
                   Datatypes.$tcSection1) -}
d0c600382c4b70e016e5245048b1bf62
  $tcSection1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Section"#) -}
984089c7f3d5915773501ba3e26b7439
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Datatypes.$trModule2
                   Datatypes.$trModule1) -}
7a6ff5ad9a97ccfc699e006f80bcc78a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Datatypes"#) -}
8c4aa1b037def2b12eb05710cd666be3
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"#) -}
f34354f1726017fe1027fd6c2beba64c
  $w$c== ::
    Datatypes.DayOfWeek
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Datatypes.DayOfWeek
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><L,1*U(U)><S,1*U><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Datatypes.DayOfWeek)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: Datatypes.DayOfWeek)
                   (ww4 :: GHC.Types.Int)
                   (ww5 :: GHC.Types.Int) ->
                 case ww of wild {
                   Datatypes.Mo
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Datatypes.Mo
                        -> case ww1 of wild2 { GHC.Types.I# x ->
                           case ww4 of wild3 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.eqInt ww2 ww5 } } } }
                   Datatypes.Tu
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Datatypes.Tu
                        -> case ww1 of wild2 { GHC.Types.I# x ->
                           case ww4 of wild3 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.eqInt ww2 ww5 } } } }
                   Datatypes.We
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Datatypes.We
                        -> case ww1 of wild2 { GHC.Types.I# x ->
                           case ww4 of wild3 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.eqInt ww2 ww5 } } } }
                   Datatypes.Th
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Datatypes.Th
                        -> case ww1 of wild2 { GHC.Types.I# x ->
                           case ww4 of wild3 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.eqInt ww2 ww5 } } } }
                   Datatypes.Fr
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Datatypes.Fr
                        -> case ww1 of wild2 { GHC.Types.I# x ->
                           case ww4 of wild3 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.eqInt ww2 ww5 } } } } }) -}
67ca4b5ab01c223d83bf928bf59fa3cd
  $w$c==1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> [Datatypes.Section]
    -> GHC.Base.String
    -> GHC.Base.String
    -> [Datatypes.Section]
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: [Datatypes.Section])
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: [Datatypes.Section]) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> GHC.Classes.$fEq[]_$c==
                             @ Datatypes.Section
                             Datatypes.$fEqSection
                             ww2
                             ww5 } }) -}
ad58660113478d00359ba2ff2cfc4dc2
  $w$c==2 ::
    GHC.Base.String
    -> GHC.Base.String
    -> [Datatypes.Day]
    -> GHC.Base.String
    -> GHC.Base.String
    -> [Datatypes.Day]
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: [Datatypes.Day])
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: [Datatypes.Day]) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> GHC.Classes.$fEq[]_$c==
                             @ Datatypes.Day
                             Datatypes.$fEqDay
                             ww2
                             ww5 } }) -}
23e93aa5e9c725220f372a265b080cf2
  $w$cshow ::
    Datatypes.DayOfWeek
    -> GHC.Types.Int -> GHC.Types.Int -> GHC.Base.String
  {- Arity: 3, Strictness: <S,1*U><L,1*U(U)><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Datatypes.DayOfWeek)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Types.Int) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Datatypes.$w$cshowsPrec ww (GHC.Types.[] @ GHC.Types.Char))
                   (GHC.CString.unpackAppendCString#
                      " from "#
                      (case ww1 of ww3 { GHC.Types.I# ww4 ->
                       case GHC.Show.$wshowSignedInt
                              0#
                              ww4
                              (GHC.Types.[] @ GHC.Types.Char) of ww5 { (#,#) ww6 ww7 ->
                       GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Types.: @ GHC.Types.Char ww6 ww7)
                         (GHC.CString.unpackAppendCString#
                            " to "#
                            (case ww2 of ww8 { GHC.Types.I# ww9 ->
                             case GHC.Show.$wshowSignedInt
                                    0#
                                    ww9
                                    (GHC.Types.[] @ GHC.Types.Char) of ww10 { (#,#) ww11 ww12 ->
                             GHC.Types.: @ GHC.Types.Char ww11 ww12 } })) } }))) -}
cf03ad50ef1df11f4c3555a5c4c78473
  $w$cshow1 ::
    GHC.Base.String
    -> GHC.Base.String -> [Datatypes.Section] -> GHC.Base.String
  {- Arity: 3, Strictness: <L,1*U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: [Datatypes.Section]) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.shows6
                      (GHC.Show.showLitString ww Datatypes.$fShowEverything2))
                   (GHC.CString.unpackAppendCString#
                      "\n"#
                      (GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Types.:
                            @ GHC.Types.Char
                            GHC.Show.shows6
                            (GHC.Show.showLitString ww1 Datatypes.$fShowEverything2))
                         (GHC.CString.unpackAppendCString#
                            "\n"#
                            (Data.OldList.unlines
                               (GHC.Base.map
                                  @ Datatypes.Section
                                  @ [GHC.Types.Char]
                                  Datatypes.$fShowEverything_$cshow
                                  ww2)))))) -}
ad58660113478d00359ba2ff2cfc4dc2
  $w$cshow2 ::
    GHC.Base.String
    -> GHC.Base.String -> [Datatypes.Day] -> GHC.Base.String
  {- Arity: 3, Strictness: <L,1*U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: [Datatypes.Day]) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.shows6
                      (GHC.Show.showLitString ww1 Datatypes.$fShowEverything2))
                   (GHC.CString.unpackAppendCString#
                      " with "#
                      (GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Types.:
                            @ GHC.Types.Char
                            GHC.Show.shows6
                            (GHC.Show.showLitString ww Datatypes.$fShowEverything2))
                         (GHC.CString.unpackAppendCString#
                            ":\n"#
                            (Data.OldList.unlines
                               (GHC.Base.map
                                  @ Datatypes.Day
                                  @ [GHC.Types.Char]
                                  Datatypes.$fShowDay_$cshow
                                  ww2)))))) -}
16c043eeea3e74307b3fcc3c3668b61a
  $w$cshowsPrec ::
    Datatypes.DayOfWeek -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Datatypes.DayOfWeek) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Datatypes.Mo
                   -> GHC.Base.++ @ GHC.Types.Char Datatypes.$fFromJSONDayOfWeek19 w1
                   Datatypes.Tu
                   -> GHC.Base.++ @ GHC.Types.Char Datatypes.$fFromJSONDayOfWeek17 w1
                   Datatypes.We
                   -> GHC.Base.++ @ GHC.Types.Char Datatypes.$fFromJSONDayOfWeek14 w1
                   Datatypes.Th
                   -> GHC.Base.++ @ GHC.Types.Char Datatypes.$fFromJSONDayOfWeek12 w1
                   Datatypes.Fr
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Datatypes.$fFromJSONDayOfWeek9
                        w1 }) -}
877615fc906ccaad066e29ffd79dc9be
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Datatypes.Everything -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Datatypes.Everything)
                   (w1 :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Datatypes.$fShowEverything5
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Datatypes.$fShowEverything4
                          (let {
                             s :: GHC.Base.String
                             = GHC.Base.++ @ GHC.Types.Char Datatypes.$fShowEverything3 x
                           } in
                           case w `cast` (Datatypes.N:Everything[0]) of wild {
                             [] -> GHC.CString.unpackAppendCString# "[]"# s
                             : x1 xs
                             -> GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showList__2
                                  (case x1 of ww1 { Datatypes.FullCourse ww2 ww3 ww4 ->
                                   GHC.Base.++
                                     @ GHC.Types.Char
                                     (Datatypes.$w$cshow1 ww2 ww3 ww4)
                                     (let {
                                        lvl73 :: [GHC.Types.Char]
                                        = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__1 s
                                      } in
                                      letrec {
                                        showl :: [Datatypes.FullCourse] -> GHC.Base.String
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ (ds2 :: [Datatypes.FullCourse]) ->
                                          case ds2 of wild1 {
                                            [] -> lvl73
                                            : y ys
                                            -> GHC.Types.:
                                                 @ GHC.Types.Char
                                                 GHC.Show.shows5
                                                 (case y of ww5 { Datatypes.FullCourse ww6 ww7 ww8 ->
                                                  GHC.Base.++
                                                    @ GHC.Types.Char
                                                    (Datatypes.$w$cshow1 ww6 ww7 ww8)
                                                    (showl ys) }) }
                                      } in
                                      showl xs) }) }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w1
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w1)) }) -}
16c043eeea3e74307b3fcc3c3668b61a
  $w$ctoEnum :: GHC.Prim.Int# -> Datatypes.DayOfWeek
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Datatypes.$fEnumDayOfWeek6 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 4#) of wild1 {
                        GHC.Types.False -> Datatypes.$fEnumDayOfWeek6 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ Datatypes.DayOfWeek ww } }) -}
691687afc46ab3f9abbaa66e46670e0e
  $w$dFromPair ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons
                   Datatypes.$fFromJSONDayOfWeek24
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
f5a72b575fc8f7d98e3db323f87bc8ac
  $w$dFromPair1 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons1
                   Datatypes.$fFromJSONDayOfWeek24
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
9ef55f3b21f5d168ba38be6fd5bf8d2f
  $w$dFromPair2 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons2
                   Datatypes.$fFromJSONDayOfWeek24
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
989ba38698413ff1646a796a8170bd3f
  $w$dFromPair3 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons3
                   Datatypes.$fFromJSONDayOfWeek24
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
c1a8361dced4ac71e5363c84d73d7ca9
  $w$dFromPair4 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons4
                   Datatypes.$fFromJSONDayOfWeek24
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
11a5faed1f660e78eca46fec3d87eefc
  $w$dFromTaggedObject ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Datatypes.$fFromJSONDayOfWeek10
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
3f54b5bf41bfe03cff9fd3acfcc0e66d
  $w$dFromTaggedObject1 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Datatypes.$fFromJSONDayOfWeek10
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons1
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
83b0e833097c06a330e90d08b5b8f7ee
  $w$dFromTaggedObject2 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Datatypes.$fFromJSONDayOfWeek10
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons2
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
f53cc5781898c787feca80836f7a57dd
  $w$dFromTaggedObject3 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Datatypes.$fFromJSONDayOfWeek10
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons3
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
149aa0ea54056e8f85a95c13b4d45197
  $w$dFromTaggedObject4 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Datatypes.$fFromJSONDayOfWeek10
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons4
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
e038a1956f157cd55860186e5ee4baef
  $w$dFromUntaggedValue ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:+:)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1))
            a1)
  {- Arity: 2, Strictness: <L,U(A,C(U),A,A,A,A)><L,U>, Inline: [0] -}
16d839c58b2132c892faf05e329b6718
  $w$dRecordToPairs ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "day")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 Datatypes.DayOfWeek)
         a1
    -> (GHC.Generics.:*:)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "start")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Int))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "end")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Int))
         a1
    -> [Data.Aeson.Types.Internal.Pair]
    -> (# Data.Aeson.Types.Internal.Pair,
          [Data.Aeson.Types.Internal.Pair] #)
  {- Arity: 4,
     Strictness: <L,U(C(U),A,A,A,A,A)><L,1*U><L,1*U(1*U(U),1*U(U))><L,U>,
     Inline: [0] -}
fb172226469c472351a536c9c891cf39
  $w$dRecordToPairs1 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "courses")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.K1 GHC.Generics.R [Datatypes.FullCourse])
         a1
    -> [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)]
    -> (# (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value),
          [(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)] #)
  {- Arity: 3, Strictness: <L,1*U(1*C1(U),A,A,A,A,A)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "courses")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Datatypes.FullCourse])
                            a1)
                   (w2 :: [(Data.Text.Internal.Text,
                            Data.Aeson.Types.Internal.Value)]) ->
                 (# (case w of wild { Data.Aeson.Types.Internal.Options ds7 ds8 ds9 ds10 ds11 ds12 ->
                     case ds7 Datatypes.$fFromJSONEverything7 of dt1 { DEFAULT ->
                     case GHC.Magic.runRW#
                            @ 'GHC.Types.PtrRepLifted
                            @ Data.Text.Internal.Text
                            (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case GHC.Prim.newByteArray#
                                    @ GHC.Prim.RealWorld
                                    10#
                                    s1 of ds13 { (#,#) ipv ipv1 ->
                             Data.Aeson.Types.ToJSON.$wouter4
                               ipv1
                               4#
                               dt1
                               0#
                               ipv }) of ds13 { (#,#) ipv ipv1 ->
                     ipv1 } } },
                     case GHC.Magic.runRW#
                            @ 'GHC.Types.PtrRepLifted
                            @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                            (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case GHC.Prim.newArray#
                                    @ Data.Aeson.Types.Internal.Value
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    0#
                                    (Data.Vector.Mutable.uninitialised
                                       @ Data.Aeson.Types.Internal.Value)
                                    s1
                                      `cast`
                                    (GHC.Prim.State#
                                       (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                 <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                             case Datatypes.$fToJSONEverything4
                                    GHC.Types.SPEC
                                    ((Data.Vector.Mutable.MVector
                                        @ (Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST GHC.Prim.RealWorld))
                                        @ Data.Aeson.Types.Internal.Value
                                        0#
                                        0#
                                        ipv1)
                                       `cast`
                                     (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                      (GHC.ST.ST
                                                                                         GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                     Datatypes.$fToJSONEverything3)
                                    (GHC.Base.map
                                       @ Datatypes.FullCourse
                                       @ Data.Aeson.Types.Internal.Value
                                       Datatypes.$fToJSONEverything2
                                         `cast`
                                       (<Datatypes.FullCourse>_R
                                        ->_R Data.Tagged.N:Tagged[0]
                                                 <*>_N
                                                 <Data.Aeson.Types.Generic.True>_P
                                                 <Data.Aeson.Types.Internal.Value>_R)
                                       w1
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "courses")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [Datatypes.FullCourse]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P
                                                 <[Datatypes.FullCourse]>_R
                                                 <a1>_P)))
                                    ipv
                                      `cast`
                                    (GHC.Prim.State#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                            <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                             case ipv7 of wild5 { (,) v' n ->
                             case v'
                                    `cast`
                                  (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                             case n of dt5 { GHC.Types.I# dt6 ->
                             case GHC.Prim.unsafeFreezeArray#
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Data.Aeson.Types.Internal.Value
                                    dt2
                                    ipv6
                                      `cast`
                                    (GHC.Prim.State#
                                       (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                 <GHC.Prim.RealWorld>_N)))_R of ds { (#,#) ipv2 ipv3 ->
                             (# ipv2
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R,
                                Data.Vector.Vector
                                  @ Data.Aeson.Types.Internal.Value
                                  dt
                                  dt6
                                  ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                     case ipv2 of dt1 { Data.Vector.Vector ipv ipv4 ipv5 ->
                     Data.Aeson.Types.Internal.Array dt1 } }),
                    w2 #)) -}
2f41daf06c2de602a16add4b4cccdc45
  $w$dRecordToPairs2 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "courseTitle")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String)
         a1
    -> (GHC.Generics.:*:)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "courseNum")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Base.String))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "sections")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 [Datatypes.Section]))
         a1
    -> [Data.Aeson.Types.Internal.Pair]
    -> (# Data.Aeson.Types.Internal.Pair,
          [Data.Aeson.Types.Internal.Pair] #)
  {- Arity: 4,
     Strictness: <L,U(C(U),A,A,A,A,A)><L,1*U><L,1*U(1*U,1*U)><L,U>,
     Inline: [0] -}
ad58660113478d00359ba2ff2cfc4dc2
  $w$dRecordToPairs3 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "instructor")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String)
         a1
    -> (GHC.Generics.:*:)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "sectionNum")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Base.String))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "schedules")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 [Datatypes.Day]))
         a1
    -> [Data.Aeson.Types.Internal.Pair]
    -> (# Data.Aeson.Types.Internal.Pair,
          [Data.Aeson.Types.Internal.Pair] #)
  {- Arity: 4,
     Strictness: <L,U(C(U),A,A,A,A,A)><L,1*U><L,1*U(1*U,1*U)><L,U>,
     Inline: [0] -}
f1da26ad79f2596da5b7fbe0dd5c2925
  $w$dSumFromString ::
    (GHC.Base.String -> GHC.Base.String)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1))
            a1)
  {- Arity: 4, Strictness: <C(S),C(U)><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Prim.ByteArray#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                        @ ('GHC.Generics.MetaCons
                             "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons4
                        @ a1
                        ww
                        ww1
                        ww2
                        ww3 of wild {
                   GHC.Base.Nothing
                   -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                             @ ('GHC.Generics.MetaCons
                                  "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons3
                             @ a1
                             ww
                             ww1
                             ww2
                             ww3 of wild1 {
                        GHC.Base.Nothing
                        -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                                  @ ('GHC.Generics.MetaCons
                                       "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons2
                                  @ a1
                                  ww
                                  ww1
                                  ww2
                                  ww3 of wild2 {
                             GHC.Base.Nothing
                             -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                                       @ ('GHC.Generics.MetaCons
                                            "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons1
                                       @ a1
                                       ww
                                       ww1
                                       ww2
                                       ww3 of wild3 {
                                  GHC.Base.Nothing
                                  -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                                            @ ('GHC.Generics.MetaCons
                                                 "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons
                                            @ a1
                                            ww
                                            ww1
                                            ww2
                                            ww3 of wild4 {
                                       GHC.Base.Nothing
                                       -> GHC.Base.Nothing
                                            @ ((GHC.Generics.:+:)
                                                 (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Tu"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1)
                                                 (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: (GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Th"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1
                                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                                       ('GHC.Generics.MetaCons
                                                                                          "Fr"
                                                                                          'GHC.Generics.PrefixI
                                                                                          'GHC.Types.False)
                                                                                       GHC.Generics.U1))
                                                 a1)
                                       GHC.Base.Just x
                                       -> GHC.Base.Just
                                            @ ((GHC.Generics.:+:)
                                                 (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Tu"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1)
                                                 (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: (GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Th"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1
                                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                                       ('GHC.Generics.MetaCons
                                                                                          "Fr"
                                                                                          'GHC.Generics.PrefixI
                                                                                          'GHC.Types.False)
                                                                                       GHC.Generics.U1))
                                                 a1)
                                            (GHC.Generics.R1
                                               @ (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                     ('GHC.Generics.MetaCons
                                                                        "Tu"
                                                                        'GHC.Generics.PrefixI
                                                                        'GHC.Types.False)
                                                                     GHC.Generics.U1)
                                               @ (GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                    GHC.Generics.U1
                                                  GHC.Generics.:+: (GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Th"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1
                                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                                       ('GHC.Generics.MetaCons
                                                                                          "Fr"
                                                                                          'GHC.Generics.PrefixI
                                                                                          'GHC.Types.False)
                                                                                       GHC.Generics.U1))
                                               @ a1
                                               (GHC.Generics.R1
                                                  @ (GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "We"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1)
                                                  @ (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Th"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Fr"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)
                                                  @ a1
                                                  (GHC.Generics.R1
                                                     @ (GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "Th"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1)
                                                     @ (GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "Fr"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.False)
                                                          GHC.Generics.U1)
                                                     @ a1
                                                     x))) }
                                  GHC.Base.Just x
                                  -> GHC.Base.Just
                                       @ ((GHC.Generics.:+:)
                                            (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.C1
                                                                ('GHC.Generics.MetaCons
                                                                   "Tu"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1)
                                            (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: (GHC.Generics.C1
                                                                 ('GHC.Generics.MetaCons
                                                                    "Th"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1
                                                               GHC.Generics.:+: GHC.Generics.C1
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "Fr"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1))
                                            a1)
                                       (GHC.Generics.R1
                                          @ (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.C1
                                                                ('GHC.Generics.MetaCons
                                                                   "Tu"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1)
                                          @ (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: (GHC.Generics.C1
                                                                 ('GHC.Generics.MetaCons
                                                                    "Th"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1
                                                               GHC.Generics.:+: GHC.Generics.C1
                                                                                  ('GHC.Generics.MetaCons
                                                                                     "Fr"
                                                                                     'GHC.Generics.PrefixI
                                                                                     'GHC.Types.False)
                                                                                  GHC.Generics.U1))
                                          @ a1
                                          (GHC.Generics.R1
                                             @ (GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                                             @ (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Fr"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)
                                             @ a1
                                             (GHC.Generics.L1
                                                @ (GHC.Generics.M1
                                                     GHC.Generics.C
                                                     ('GHC.Generics.MetaCons
                                                        "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1)
                                                @ (GHC.Generics.M1
                                                     GHC.Generics.C
                                                     ('GHC.Generics.MetaCons
                                                        "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                     GHC.Generics.U1)
                                                @ a1
                                                x))) }
                             GHC.Base.Just x
                             -> GHC.Base.Just
                                  @ ((GHC.Generics.:+:)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Tu"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.C1
                                                            ('GHC.Generics.MetaCons
                                                               "Th"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.C1
                                                                             ('GHC.Generics.MetaCons
                                                                                "Fr"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1))
                                       a1)
                                  (GHC.Generics.R1
                                     @ (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Tu"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                     @ (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: (GHC.Generics.C1
                                                            ('GHC.Generics.MetaCons
                                                               "Th"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1
                                                          GHC.Generics.:+: GHC.Generics.C1
                                                                             ('GHC.Generics.MetaCons
                                                                                "Fr"
                                                                                'GHC.Generics.PrefixI
                                                                                'GHC.Types.False)
                                                                             GHC.Generics.U1))
                                     @ a1
                                     (GHC.Generics.L1
                                        @ (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1)
                                        @ (GHC.Generics.C1
                                             ('GHC.Generics.MetaCons
                                                "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.C1
                                                              ('GHC.Generics.MetaCons
                                                                 "Fr"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1)
                                        @ a1
                                        x)) }
                        GHC.Base.Just x
                        -> GHC.Base.Just
                             @ ((GHC.Generics.:+:)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Tu"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Th"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Fr"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                  a1)
                             (GHC.Generics.L1
                                @ (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Tu"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                @ (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Th"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.C1
                                                                        ('GHC.Generics.MetaCons
                                                                           "Fr"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1))
                                @ a1
                                (GHC.Generics.R1
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ a1
                                   x)) }
                   GHC.Base.Just x
                   -> GHC.Base.Just
                        @ ((GHC.Generics.:+:)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Fr"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                             a1)
                        (GHC.Generics.L1
                           @ (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Fr"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                           @ a1
                           (GHC.Generics.L1
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ a1
                              x)) }) -}
09302c6789e71c83265ea730abe4885e
  $wg ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: (GHC.Generics.C1
                           ('GHC.Generics.MetaCons
                              "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1
                         GHC.Generics.:+: GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Fr" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                            GHC.Generics.U1))
      GHC.Prim.Any
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: (GHC.Generics.:+:)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: (GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1
                                              GHC.Generics.:+: GHC.Generics.C1
                                                                 ('GHC.Generics.MetaCons
                                                                    "Fr"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.False)
                                                                 GHC.Generics.U1))
                           GHC.Prim.Any) ->
                 case case w of wild {
                        GHC.Generics.L1 x
                        -> case x of wild1 {
                             GHC.Generics.L1 x1 -> Datatypes.$fFromJSONDayOfWeek19
                             GHC.Generics.R1 x1 -> Datatypes.$fFromJSONDayOfWeek17 }
                        GHC.Generics.R1 x
                        -> case x of wild1 {
                             GHC.Generics.L1 x1 -> Datatypes.$fFromJSONDayOfWeek14
                             GHC.Generics.R1 x1
                             -> case x1 of wild2 {
                                  GHC.Generics.L1 x2 -> Datatypes.$fFromJSONDayOfWeek12
                                  GHC.Generics.R1 x2
                                  -> Datatypes.$fFromJSONDayOfWeek9 } } } of dt1 { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                10#
                                s1 of ds7 { (#,#) ipv ipv1 ->
                         Data.Aeson.Types.ToJSON.$wouter5
                           ipv1
                           4#
                           dt1
                           0#
                           ipv }) of ds7 { (#,#) ipv ipv1 ->
                 case ipv1 of dt2 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt2 #) } } }) -}
ad58660113478d00359ba2ff2cfc4dc2
  data Day
    = Day {day :: Datatypes.DayOfWeek,
           start :: GHC.Types.Int,
           end :: GHC.Types.Int}
16c043eeea3e74307b3fcc3c3668b61a
  data DayOfWeek = Mo | Tu | We | Th | Fr
877615fc906ccaad066e29ffd79dc9be
  newtype Everything = Everything {courses :: [Datatypes.FullCourse]}
58cb5799dc36d56d62c8e8a1f5bf1204
  data FullCourse
    = FullCourse {courseTitle :: GHC.Base.String,
                  courseNum :: GHC.Base.String,
                  sections :: [Datatypes.Section]}
ad58660113478d00359ba2ff2cfc4dc2
  axiom Rep_Day::
      GHC.Generics.Rep Datatypes.Day
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Day"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Day" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "day")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Datatypes.DayOfWeek)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "start")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "end")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int))))
16c043eeea3e74307b3fcc3c3668b61a
  axiom Rep_DayOfWeek::
      GHC.Generics.Rep Datatypes.DayOfWeek
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "DayOfWeek"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "Mo" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Tu" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1)
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "We" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Th" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "Fr"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1)))
877615fc906ccaad066e29ffd79dc9be
  axiom Rep_Everything::
      GHC.Generics.Rep Datatypes.Everything
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Everything"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.True)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Everything" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "courses")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [Datatypes.FullCourse])))
58cb5799dc36d56d62c8e8a1f5bf1204
  axiom Rep_FullCourse::
      GHC.Generics.Rep Datatypes.FullCourse
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "FullCourse"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "FullCourse" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "courseTitle")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "courseNum")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "sections")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Datatypes.Section]))))
ad58660113478d00359ba2ff2cfc4dc2
  axiom Rep_Section::
      GHC.Generics.Rep Datatypes.Section
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Section"
               "Datatypes"
               "Scheduler-0.1.0.0-2KhWUDBbeU0Ht4qZIHl35W"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Section" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "instructor")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "sectionNum")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "schedules")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Datatypes.Day]))))
ad58660113478d00359ba2ff2cfc4dc2
  data Section
    = Section {instructor :: GHC.Base.String,
               sectionNum :: GHC.Base.String,
               schedules :: [Datatypes.Day]}
instance GHC.Enum.Enum [Datatypes.DayOfWeek]
  = Datatypes.$fEnumDayOfWeek
instance GHC.Classes.Eq [Datatypes.Day] = Datatypes.$fEqDay
instance GHC.Classes.Eq [Datatypes.DayOfWeek]
  = Datatypes.$fEqDayOfWeek
instance GHC.Classes.Eq [Datatypes.Everything]
  = Datatypes.$fEqEverything
instance GHC.Classes.Eq [Datatypes.FullCourse]
  = Datatypes.$fEqFullCourse
instance GHC.Classes.Eq [Datatypes.Section] = Datatypes.$fEqSection
instance Data.Aeson.Types.FromJSON.FromJSON [Datatypes.Day]
  = Datatypes.$fFromJSONDay
instance Data.Aeson.Types.FromJSON.FromJSON [Datatypes.DayOfWeek]
  = Datatypes.$fFromJSONDayOfWeek
instance Data.Aeson.Types.FromJSON.FromJSON [Datatypes.Everything]
  = Datatypes.$fFromJSONEverything
instance Data.Aeson.Types.FromJSON.FromJSON [Datatypes.FullCourse]
  = Datatypes.$fFromJSONFullCourse
instance Data.Aeson.Types.FromJSON.FromJSON [Datatypes.Section]
  = Datatypes.$fFromJSONSection
instance GHC.Generics.Generic [Datatypes.Day]
  = Datatypes.$fGenericDay
instance GHC.Generics.Generic [Datatypes.DayOfWeek]
  = Datatypes.$fGenericDayOfWeek
instance GHC.Generics.Generic [Datatypes.Everything]
  = Datatypes.$fGenericEverything
instance GHC.Generics.Generic [Datatypes.FullCourse]
  = Datatypes.$fGenericFullCourse
instance GHC.Generics.Generic [Datatypes.Section]
  = Datatypes.$fGenericSection
instance GHC.Classes.Ord [Datatypes.DayOfWeek]
  = Datatypes.$fOrdDayOfWeek
instance GHC.Show.Show [Datatypes.Day] = Datatypes.$fShowDay
instance GHC.Show.Show [Datatypes.DayOfWeek]
  = Datatypes.$fShowDayOfWeek
instance GHC.Show.Show [Datatypes.Everything]
  = Datatypes.$fShowEverything
instance GHC.Show.Show [Datatypes.FullCourse]
  = Datatypes.$fShowFullCourse
instance GHC.Show.Show [Datatypes.Section]
  = Datatypes.$fShowSection
instance Data.Aeson.Types.ToJSON.ToJSON [Datatypes.Day]
  = Datatypes.$fToJSONDay
instance Data.Aeson.Types.ToJSON.ToJSON [Datatypes.DayOfWeek]
  = Datatypes.$fToJSONDayOfWeek
instance Data.Aeson.Types.ToJSON.ToJSON [Datatypes.Everything]
  = Datatypes.$fToJSONEverything
instance Data.Aeson.Types.ToJSON.ToJSON [Datatypes.FullCourse]
  = Datatypes.$fToJSONFullCourse
instance Data.Aeson.Types.ToJSON.ToJSON [Datatypes.Section]
  = Datatypes.$fToJSONSection
family instance GHC.Generics.Rep [Datatypes.Everything]
  = Datatypes.Rep_Everything
family instance GHC.Generics.Rep [Datatypes.FullCourse]
  = Datatypes.Rep_FullCourse
family instance GHC.Generics.Rep [Datatypes.Section]
  = Datatypes.Rep_Section
family instance GHC.Generics.Rep [Datatypes.Day]
  = Datatypes.Rep_Day
family instance GHC.Generics.Rep [Datatypes.DayOfWeek]
  = Datatypes.Rep_DayOfWeek
"SPEC/Datatypes $fConstructorMetaMetaCons @ "Fr" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.False)
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "Fr")
  GHC.Generics.$fConstructorMetaMetaCons @ "Fr"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons
"SPEC/Datatypes $fConstructorMetaMetaCons @ "Mo" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.False)
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "Mo")
  GHC.Generics.$fConstructorMetaMetaCons @ "Mo"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons4
"SPEC/Datatypes $fConstructorMetaMetaCons @ "Th" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.False)
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "Th")
  GHC.Generics.$fConstructorMetaMetaCons @ "Th"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons1
"SPEC/Datatypes $fConstructorMetaMetaCons @ "Tu" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.False)
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "Tu")
  GHC.Generics.$fConstructorMetaMetaCons @ "Tu"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons3
"SPEC/Datatypes $fConstructorMetaMetaCons @ "We" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.False)
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "We")
  GHC.Generics.$fConstructorMetaMetaCons @ "We"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Datatypes.$fFromJSONDayOfWeek_$s$fConstructorMetaMetaCons2
"SPEC/Datatypes $fEq[]_$c/= @ FullCourse" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                     Datatypes.FullCourse)
  GHC.Classes.$fEq[]_$c/= @ Datatypes.FullCourse $dEq
  = Datatypes.$fEqEverything_$s$fEq[]_$c/=
"SPEC/Datatypes $fFromJSON[] @ Char" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                      GHC.Types.Char)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Types.Char $dFromJSON
  = Datatypes.$fFromJSONSection_$s$fFromJSON[]1
"SPEC/Datatypes $fFromJSON[] @ Day" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                     Datatypes.Day)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ Datatypes.Day $dFromJSON
  = Datatypes.$fFromJSONSection_$s$fFromJSON[]
"SPEC/Datatypes $fFromJSON[] @ FullCourse" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                            Datatypes.FullCourse)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ Datatypes.FullCourse
                                         $dFromJSON
  = Datatypes.$fFromJSONEverything_$s$fFromJSON[]
"SPEC/Datatypes $fFromJSON[] @ Section" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                         Datatypes.Section)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ Datatypes.Section
                                         $dFromJSON
  = Datatypes.$fFromJSONFullCourse_$s$fFromJSON[]
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "courseNum") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                    ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                                                     "courseNum"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "courseNum")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel1
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "courseTitle") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                      ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                    ('GHC.Base.Just
                                                                                                                                                                                                       "courseTitle"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "courseTitle")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel2
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "courses") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                   "courses"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "courses")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONEverything_$s$fSelectorMetaMetaSel
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "day") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                               "day"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "day")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel2
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "end") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                               "end"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "end")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "instructor") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                     ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                     ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                      "instructor"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "instructor")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel2
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "schedules") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                    ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                                                     "schedules"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "schedules")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "sectionNum") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                     ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                     ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                      "sectionNum"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "sectionNum")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel1
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "sections") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                    "sections"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "sections")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel
"SPEC/Datatypes $fSelectorMetaMetaSel @ ('Just
                                          "start") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                                                                 "start"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "start")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel1
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "courseNum") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                                                         "courseNum"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "courseNum")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "courseTitle") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                          ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                          ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                          ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                                                                                           "courseTitle"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "courseTitle")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "courses") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                      ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                    ('GHC.Base.Just
                                                                                                                                                                                                                       "courses"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "courses")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONEverything_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "day") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                   "day"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "day")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "end") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                   "end"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "end")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "instructor") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                         ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                         ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                         ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                       ('GHC.Base.Just
                                                                                                                                                                                                                          "instructor"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "instructor")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "schedules") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                                                         "schedules"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "schedules")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "sectionNum") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                         ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                         ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                         ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                       ('GHC.Base.Just
                                                                                                                                                                                                                          "sectionNum"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "sectionNum")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONSection_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "sections") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                       ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                       ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                       ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                                                        "sections"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "sections")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONFullCourse_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Datatypes $fSelectorMetaMetaSel_$cselName @ ('Just
                                                    "start") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                    ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                                                                     "start"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "start")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datatypes.$fFromJSONDay_$s$fSelectorMetaMetaSel_$cselName1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

